{
  "version": "2.81.3",
  "grid": {
    "layers": {
      "Default layer": {
        "name": "Default layer"
      },
      "admin": {
        "name": "admin"
      },
      "Links": {
        "name": "Links"
      }
    },
    "xWidth": 10,
    "yHeight": 10
  },
  "modules": [
    {
      "url": "modules/types/edition/slick_grid/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "slickCheck": [
                [
                  "enableCellNavigation",
                  "rowNumbering",
                  "forceFitColumns",
                  "highlightScroll",
                  "editable",
                  "filterColumns"
                ]
              ],
              "autoColumns": [
                []
              ],
              "toolbar": [
                []
              ],
              "colorjpath": [
                []
              ],
              "slick.defaultColumnWidth": [
                null
              ],
              "slick.rowHeight": [
                "150"
              ],
              "slick.headerRowHeight": [
                30
              ],
              "slick.selectionModel": [
                "row"
              ],
              "idProperty": [
                ""
              ],
              "filterType": [
                "pref"
              ],
              "filterRow": [
                "if(this.event === 'renderAction') {\n    if(this.column.name === 'Make public') {\n        if(this.row.item.$owners.indexOf('anonymousRead') === -1) {\n            this.renderOptions.icon = 'fa-eye-slash';\n            this.renderOptions.tooltip = 'Private.Click to make this reaction public';\n        } else {\n            this.renderOptions.icon = 'fa-eye';\n            this.renderOptions.tooltip = 'Public. Click to make this reaction private';\n        }  \n    } else if(this.column.name === 'Is owner') {\n        var user = API.cache('user');\n        if(this.row.item.$owners.indexOf(user) === -1) {\n            this.renderOptions.icon = 'fa-lock';\n            this.renderOptions.tooltip = 'You are not an owner of this reaction';\n        } else {\n            this.renderOptions.icon = 'fa-unlock';\n            this.renderOptions.tooltip = 'You are an owner of this reaction'\n        }\n    }\n}"
              ],
              "customJpaths": [
                ""
              ]
            }
          ],
          "cols": [
            [
              {
                "name": "Product reference",
                "jpath": [
                  "value",
                  "reference"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 107,
                "hideColumn": []
              },
              {
                "name": "Last modif.",
                "jpath": [
                  "value",
                  "modificationDate"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "dateFormat:'YYYY-MM-DD'",
                "editorOptions": "",
                "width": 78,
                "hideColumn": []
              },
              {
                "name": "Structure",
                "jpath": [
                  "value",
                  "oclid"
                ],
                "editor": "none",
                "forceType": "oclID",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "useCanvas:true",
                "editorOptions": "",
                "width": 142,
                "hideColumn": []
              },
              {
                "name": "nb 1d",
                "jpath": [
                  "value",
                  "nb1d"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 41,
                "hideColumn": []
              },
              {
                "name": "nb 2d",
                "jpath": [
                  "value",
                  "nb2d"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 41,
                "hideColumn": []
              },
              {
                "name": "nb ms",
                "jpath": [
                  "value",
                  "hasMass"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 41,
                "hideColumn": []
              },
              {
                "name": "nb IR",
                "jpath": [
                  "value",
                  "hasIR"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 50,
                "hideColumn": []
              }
            ]
          ],
          "actionCols": [
            [
              {
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  0,
                  0,
                  0,
                  1
                ],
                "position": "end",
                "clickMode": "text"
              }
            ]
          ],
          "groupings": [
            [
              {
                "getter": []
              }
            ]
          ],
          "actionOutButtons": [
            [
              {}
            ]
          ],
          "data": [
            {
              "saveInView": [
                []
              ],
              "varname": [
                ""
              ],
              "data": [
                "[]"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 8
          },
          "size": {
            "width": 54,
            "height": 72
          },
          "zIndex": 0,
          "display": true,
          "title": "Click the right of the line to open the sample",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 5
          },
          "size": {
            "width": 57,
            "height": 73
          },
          "zIndex": 0,
          "display": true,
          "title": "Click the right of the line to open the sample",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 51,
            "height": 21
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 1,
      "vars_in": [
        {
          "rel": "list",
          "name": "filteredSamples"
        }
      ],
      "actions_in": [
        {
          "rel": "selectRow",
          "name": "clickRow"
        }
      ],
      "title": "Click the right of the line to open the sample",
      "vars_out": [
        {
          "event": "onSelect",
          "rel": "row",
          "jpath": [],
          "name": "sampleClicked"
        },
        {
          "event": "onSelect",
          "rel": "row",
          "jpath": [
            "value",
            "reference"
          ],
          "name": "referenceClicked"
        }
      ],
      "actions_out": [
        {
          "event": "onDoubleClick",
          "rel": "row",
          "jpath": [],
          "name": "rowDoubleClicked"
        }
      ],
      "zindex": 4,
      "toolbar": {
        "custom": [
          [
            {
              "title": "Refresh",
              "icon": "fa-refresh",
              "action": "refreshSample",
              "position": "end"
            },
            {
              "title": "Show user info",
              "icon": "fa-user",
              "action": "ShowUserInfo",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/array_search/smart_array_filter/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "debounce": [
                250
              ],
              "limit": [
                0
              ],
              "initialValue": [
                ""
              ],
              "placeholder": [
                "Search for samples"
              ],
              "fontSize": [
                24
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 52,
            "top": 59
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 5,
            "top": 71
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 2,
      "vars_in": [
        {
          "rel": "input",
          "name": "samples"
        }
      ],
      "actions_in": [
        {}
      ],
      "title": "",
      "vars_out": [
        {
          "event": "onQuery",
          "rel": "output",
          "jpath": [],
          "name": "filteredSamples"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "zindex": 2,
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "buttons",
                  "editor"
                ]
              ],
              "execOnLoad": [
                [
                  "yes"
                ]
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "var roc = API.cache('rocSample');\nvar couchDB = API.cache('couchDB');\nvar printerConfig = API.cache('printerConfig');\nvar printer = API.cache('printer');\nvar user = API.cache('user');\n// var domain = API.cache('domain');\n\nif(this.event === 'load' && printerConfig) {\n    printer = await printerLib(printerConfig.couchDB);\n    printerHelper.setup(printer, ['sample']);\n}\n\nif(!roc) {\n    roc = await new Roc({\n            url: couchDB.url,\n            database: couchDB.database,\n            processor: elnPlugin,\n            kind: 'sample'\n        }\n    );\n        \n    var userInfo = await roc.getUserInfo();\n    var user=await roc.getUser();\n    API.cache('user', user);\n    API.cache('userInfo', userInfo);\n    var groups=(await roc.getGroups()).map(g => g.name);\n    createForm(groups);\n    \n    refreshSample();\n    API.cache('rocSample', roc);\n    return;\n}\n\n\n\nif(this.variable) {\n    refreshSample();\n}\n\nif(!this.action) return;\n\n\n\nswitch(this.action.name) {\n    case 'createSample':\n        createSample();\n        break;\n    case 'deleteSample': \n        deleteSample(this.action.value);\n        break;\n    case 'refreshSample':\n        refreshSample();\n        break;\n    case 'rowDoubleClicked':\n        openDefault(this.action.value.id, this.action.value.value.reference);\n        break;\n    case 'printSample':\n        const doc = await DataObject.check(this.action.value.document).get(true);\n        printerHelper.askPrintEntry(doc, 'sample');\n        break;\n    default:\n        console.warn('Unhandled sample action');\n        break;\n}\n\n//sd\nif(!this.action) return;\n\nfunction createSample(sample) {\n    var entrysample = {$content: {}}\n    ui.form(`\n        <div>\n        <form>\n            <table>\n            <tr>\n            <th align=right>Reference<br><span style='font-size: smaller'>Reaction code</span></th>\n            <td><input type=\"text\" name=\"code\"/></td>\n            </tr>\n            <tr>\n            <th align=right>Batch<br><span style='font-size: smaller'>Fraction</span></th>\n            <td><input type=\"text\" name=\"batch\"/></td>\n            </tr>\n            <!--\n            <tr>\n            <th align=right>Sample<br><span style='font-size: smaller'>(empty most of the time)</span></th>\n            <td><input type=\"text\" name=\"sample\"/></td>\n            </tr>\n            -->\n            </table>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>\n        </div>\n    `,{}).then(function(result){\n        if (!result || !result.code || result.batch == null) return;\n        entrysample.$id = [result.code, result.batch];\n        if (result.sample) entrysample.$id.push(result.sample);\n        var userInfo = API.cache('userInfo');\n        \n        if (userInfo && userInfo.allGroups) {\n            entrysample.$owners=userInfo.allGroups;\n        }\n\n        roc.create(entrysample).then(function(sample) {\n            openDefault(sample._id, sample.$id.join(' '));\n            // we do like if we would have click on the line we just added\n            API.createData('sampleClicked', {id: sample._id});\n        });\n    });\n}\n\nfunction deleteSample(entry) {\n    ui.confirm('Are you sure you want to delete ' + entry.value.reference)\n    .then(function(res) {\n        if(!res) return;\n        roc.delete(entry.id);\n    });\n}\n\nfunction refreshSample() {\n    \n    var uuid=(API.getData('sampleClicked') || {}).id;\n    \n    var options = {varName: 'samples'};\n    var form = API.getData('formSample'), group;\n    if(!form) return;\n    group = form.group;\n    \n    window.localStorage.setItem('eln-default-sample-group', String(group));\n    \n    if(group === 'mine') {\n        options.mine = 1;\n    } else if(group !== 'all') {\n        options.groups = group;\n    }\n    \n    options.sort = function(a, b) {\n        if(a.value.modificationDate > b.value.modificationDate) {\n            return -1;\n        } else if(a.value.modificationDate < b.value.modificationDate) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    \n    roc.query('sample_toc', options).then(function(data) {\n        API.cache('nbSamples', data.length);\n        API.doAction('renderTiles');\n        // we need to select the previously selected element\n        const index = data.findIndex(sample => String(sample.id) == uuid);\n        if (index !== -1) {\n            API.doAction('clickRow', index);\n        }\n    });\n}\n\nfunction createForm(groups) {\n    var possibleGroups = [\"all\", \"mine\"].concat(groups);\n    var defaultGroup = window.localStorage.getItem('eln-default-sample-group');\n    if(possibleGroups.indexOf(defaultGroup) === -1) {\n        defaultGroup = 'all';\n    }\n    var schema = {\n        type: 'object',\n        properties: {\n            group: {\n                type: 'string',\n                enum: possibleGroups,\n                default: defaultGroup,\n                required: true\n            }\n        }\n    }\n    API.createData('formSchema', schema)\n}\n\nfunction openDefault(uuid, ref) {\n    IframeBridge.postMessage('tab.open', {\n        id: 'OS ' + ref,\n        url: '15c9a2dcd55c963fdedf2c18a1471b03',\n        data: {\n            couchDB: couchDB,\n            uuid: String(uuid),\n            reference: ref,\n           //  domain: domain\n        },\n    });\n}\n\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "vh/rest-on-couch/Roc",
                "alias": "Roc"
              },
              {
                "lib": "lodash",
                "alias": "_"
              },
              {
                "lib": "src/util/ui",
                "alias": "ui"
              },
              {
                "lib": "https://www.lactame.com/lib/eln-plugin/0.0.2/eln-plugin.js",
                "alias": "elnPlugin"
              },
              {
                "lib": "vh/eln/stock/printer/printer",
                "alias": "printerLib"
              },
              {
                "lib": "vh/eln/stock/printer/helper",
                "alias": "printerHelper"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 52,
            "top": 51
          },
          "size": {
            "width": 63,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "ROC samples",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 59,
            "top": 2
          },
          "size": {
            "width": 73,
            "height": 73
          },
          "zIndex": 0,
          "display": true,
          "title": "ROC samples",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 34,
            "top": 50
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 3,
      "vars_in": [
        {
          "rel": "inputValue",
          "name": "formSample"
        }
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "deleteSample"
        },
        {
          "rel": "execute",
          "name": "openSample"
        },
        {
          "rel": "execute",
          "name": "processNMR"
        },
        {
          "rel": "execute",
          "name": "togglePublic"
        },
        {
          "rel": "execute",
          "name": "createSample"
        },
        {
          "rel": "execute",
          "name": "refreshSample"
        },
        {
          "rel": "execute",
          "name": "updateSample"
        },
        {
          "rel": "execute",
          "name": "overlayNMR"
        },
        {
          "rel": "execute",
          "name": "peakPicking"
        },
        {
          "rel": "execute",
          "name": "rowDoubleClicked"
        },
        {
          "rel": "execute",
          "name": "printSample"
        }
      ],
      "title": "ROC samples",
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "zindex": 4,
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/edition/onde/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "hasButton": [
                [
                  "onload"
                ]
              ],
              "button_text": [
                "Export"
              ],
              "debouncing": [
                0
              ],
              "output": [
                "new"
              ],
              "mode": [
                "schema"
              ],
              "schemaSource": [
                "variable"
              ],
              "schema": [
                ""
              ],
              "onchangeFilter": [
                null
              ]
            }
          ],
          "data": [
            {
              "saveInView": [
                []
              ],
              "varname": [
                ""
              ],
              "data": [
                "{}"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 18,
            "top": 41
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 4,
      "vars_in": [
        {
          "rel": "schema",
          "name": "formSchema"
        }
      ],
      "actions_in": [
        {}
      ],
      "title": "",
      "vars_out": [
        {
          "event": "onFormSubmit",
          "rel": "outputValue",
          "jpath": [],
          "name": "formSample"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "zindex": 4,
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/client_interaction/code_editor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "mode": [
                "html"
              ],
              "outputType": [
                null
              ],
              "btnvalue": [
                "Send script"
              ],
              "iseditable": [
                [
                  "editable"
                ]
              ],
              "hasButton": [
                []
              ],
              "variable": [
                []
              ],
              "storeOnChange": [
                [
                  "store"
                ]
              ],
              "debouncing": [
                250
              ],
              "script": [
                "<div id=\"sample-tiles\"></div>"
              ]
            }
          ],
          "ace": [
            {
              "useSoftTabs": [
                [
                  "yes"
                ]
              ],
              "tabSize": [
                4
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 72,
            "top": 81
          },
          "size": {
            "width": 29,
            "height": 7
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 5,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "event": "onEditorChange",
          "rel": "data",
          "jpath": [],
          "name": "twigTemplate"
        }
      ],
      "title": "",
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "zindex": 2,
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                [
                  "yes"
                ]
              ],
              "asyncAwait": [
                []
              ],
              "script": [
                "var tilesData=get('tiles');\nvar couchDB = API.cache('couchDB');\nvar printer = API.cache('printerConfig');\nvar domain = API.cache('domain');\nvar couchPublicUrl = 'https://couch.cheminfo.org';\nvar couchPublicDatabase = 'cheminfo-public';\n\nif(tilesData) {\n    console.log('render tiles');\n    tilesData = tilesData.resurrect().map(t => {\n        return t.empty ? {} : t;\n    })\n    tiles('sample-tiles', {\n        tiles: tilesData,\n        shouldRender: tile => {\n            let user = API.cache('user');\n            if(user) user = user.username;\n            return (checkRights(user, tile.rights, true));\n        },\n        ribbon: tile => {\n            if(tile.rights) {\n                return 'LIMITED';\n            } else if (tile.date) {\n                const d = new Date(tile.date);\n                if(new Date() - d < 1296000000) {\n                    return 'NEW';\n                }\n            }\n            return '';\n        },\n        isActive: tile => {\n            if(tile.kind === 'sample') {\n                const sample = API.getData('sampleClicked');\n                if(sample) return true;\n            } else {\n                return true;\n            }\n            return false;\n        },\n        isLink: tile => true,\n        icon: tile => tile.icon,\n        title: tile => tile.icon ? '' : checkCache(tile.title),\n        backgroundColor: tile => String(tile.bgcolor),\n        color: tile => tile.fontcolor || 'black',\n        header: tile => tile.description,\n        footer: tile => tile.id,\n        onTileClick: (event, tile) => {\n            if(event.shiftKey && tile.viewURL) {\n                return showCode(tile);\n            }\n            \n            handleClick(tile);\n        }\n    });\n}\n\n\n\nasync function showCode(tile) {\n    console.log('show code');\n    const copiedTile = Object.assign({}, tile);\n    delete copiedTile.line;\n    \n    const res = await superagent.get(couchPublicUrl + '/' + couchPublicDatabase + '/' + tile.viewURL)\n    .set('Accept', 'application/json');\n    if(res.status === 200) {\n        copiedTile.rev = res.body._rev;\n    } else {\n        throw new Error('This view might not be public (' + res.status + ')');\n    }\n    \n    console.log('helloooo')\n    const roc = new Roc({\n        url: 'https://mydb.cheminfo.org',\n        database: 'visualizer'\n    });\n    \n    let title = '';\n    try {\n        const view = await roc.get(tile.viewURL);\n        if(res.body._rev === view._rev) {\n            title = 'Private and public revs match';\n        } else {\n            title = `Private: rev ${revNumber(view._rev)}, Pubilc: rev ${revNumber(res.body._rev)}`;\n        }\n        console.log('private rev: ', view._rev);\n    } catch(e) {\n        title = 'not able to get private revision of the view';\n    }\n    \n    try {\n        await UI.showCode({\n            mode: 'json',\n            content: JSON.stringify(copiedTile, null, '\\t'),\n            title: title\n        });    \n    } catch(e) {\n        UI.showNotification(e.message, 'error');\n    }\n}\n\nfunction handleClick(tile) {\n    var sample = API.getData('sampleClicked');\n    if(sample) {\n        var uuid = sample.id;\n        var code = sample.value.reference;\n    }\n    var referer=document.location.href.replace(/(\\/\\/.*?\\/).*/,'$1').replace('blob:','');\n    \n    var viewURL=tile.viewURL;\n    \n    viewURL+='?referer='+encodeURIComponent(referer);\n    if (tile.rev) viewURL+='&rev='+tile.rev;\n    switch (String(tile.kind)) {\n        case 'sample':\n            if (! uuid || ! code) return;\n            IframeBridge.postMessage('tab.open', {\n                id: `${tile.id} ${code}`,\n                url: viewURL,\n                data: {\n                    printer,\n                    couchDB,\n                    domain,\n                    uuid: String(uuid),\n                    reference: code + '',\n                    data: tile.data\n                }\n            });\n            break;\n        case 'optionalSample':\n            console.log(printer, couchDB);\n            uuid = uuid || '';\n            IframeBridge.postMessage('tab.open', {\n                id: tile.id,\n                url: viewURL,\n                data: {\n                    printer,\n                    couchDB,\n                    uuid: String(uuid),\n                    data: tile.data\n                }\n            });\n            break;\n    }\n}\n\nfunction checkCache(val) {\n    if(val) {\n        const parts = val.split(':');\n        if(parts[0] === 'cache') {\n            const jpath = parts[1].split('.');\n            const name = jpath.splice(0, 1);\n            if(jpath.length === 0) return API.cache(name[0]);\n            return DataObject.resurrect(DataObject.check(Object.assign({}, API.cache(name[0]))).getChildSync(jpath));\n        } else {\n            return val;\n        }\n    }\n}\n\nfunction revNumber(rev) {\n    const m = /^(\\d+)/.exec(rev);\n    return m && m[1];\n}"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "src/util/ui",
                "alias": "UI"
              },
              {
                "lib": "superagent",
                "alias": "superagent"
              },
              {
                "lib": "vh/util/tiles",
                "alias": "tiles"
              },
              {
                "lib": "vh/util/checkRights",
                "alias": "checkRights"
              },
              {
                "lib": "vh/rest-on-couch/Roc",
                "alias": "Roc"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Converting the hyperlink template to hyperlinks and create functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Converting the hyperlink template",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 0,
            "top": 80
          },
          "size": {
            "width": 70,
            "height": 67
          },
          "zIndex": 0,
          "display": true,
          "title": "Converting the hyperlink template",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 6,
      "vars_in": [
        {
          "rel": "inputValue",
          "name": "sampleClicked"
        },
        {
          "rel": "inputValue",
          "name": "tiles"
        }
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "renderTiles"
        }
      ],
      "title": "Converting the hyperlink template",
      "vars_out": [
        {
          "event": "onScriptEnded",
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "zindex": 2,
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/display/template-twig/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "selectable": [
                []
              ],
              "template": [
                ""
              ],
              "modifyInForm": [
                []
              ],
              "debouncing": [
                0
              ],
              "formOptions": [
                [
                  "keepFormValueIfDataUndefined"
                ]
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 55,
            "top": 1
          },
          "size": {
            "width": 98,
            "height": 84
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 0,
            "top": 23
          },
          "size": {
            "width": 51,
            "height": 56
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 7,
      "vars_in": [
        {
          "rel": "tpl",
          "name": "twigTemplate"
        },
        {
          "rel": "value",
          "name": "links"
        },
        {
          "rel": "value",
          "name": "userInfo"
        }
      ],
      "actions_in": [
        {}
      ],
      "title": "",
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "zindex": 2,
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "var couchDB = API.cache('couchDB');\n\n// we first reload the data\n// for the specific user\nvar roc = API.cache('rocSample');\nvar options = {\n    varName: 'samples',\n    mine: 1\n};\n\nvar entries= await roc.query('sample_toc', options);\nentries=entries.slice(0,5);\nconsole.log('Need to update ',entries.length,'entries');\n\nvar counter=0;\nfor (var entry of entries) {\n    console.log('Updating',++counter,'/',entries.length,'  Record ID:',entry.id);\n    await roc.document(String(entry.id));\n}\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "vh/eln/Sample",
                "alias": "Sample"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Migrate from cheminfo",
                "hide": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Migrate my products from cheminfo",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 81
          },
          "size": {
            "width": 69,
            "height": 30
          },
          "zIndex": 0,
          "display": true,
          "title": "Migrate my products from cheminfo",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Migrate my products from cheminfo",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 8,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Migrate my products from cheminfo"
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "\nvar couchDB = API.cache('couchDB');\n\n// we first reload the data\n// for the specific user\nvar roc = API.cache('rocSample');\nvar options = {\n    varName: 'samples',\n    mine: 1\n};\n\nvar entries= await roc.query('sample_toc', options);\n\nconsole.log('Need to delete ',entries.length,'entries');\n\nvar counter=0;\nfor (var entry of entries) {\n    var id=String(entry.id);\n    var uuid=entry.value._id;\n    if (uuid) {\n        if (id.match(/^[0-9]+$/)) {\n            console.log('Deleting',++counter,'/',entries.length,'  Record ID:',id,' UUID',uuid);\n            await roc.delete(uuid);\n        } else {\n            console.log('Not touching an entry added directly in ELN',id);\n        }\n    } else {\n        console.log('We have an undefined uuid. The entry was not yet copied',entry.id);\n    }\n    \n\n\n}\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "vh/eln/Sample",
                "alias": "Sample"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Delete products from cheminfo",
                "hide": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Delete all products migrated from cheminfo",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 70,
            "top": 78
          },
          "size": {
            "width": 69,
            "height": 32
          },
          "zIndex": 0,
          "display": true,
          "title": "Delete all products migrated from cheminfo",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Delete all products migrated from cheminfo",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 9,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Delete all products migrated from cheminfo"
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "var button=getButton();\n\nswitch (button) {\n    case 'add':\n        API.doAction('createSample');\n        break;\n    case 'help':\n        API.doAction('Help');\n        break;\n}"
              ]
            }
          ],
          "libs": [
            [
              {}
            ]
          ],
          "buttons": [
            [
              {
                "name": "help",
                "label": "Help",
                "hide": []
              },
              {
                "name": "add",
                "label": "Add sample",
                "hide": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 36,
            "top": 0
          },
          "size": {
            "width": 19,
            "height": 6
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 10,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": ""
    },
    {
      "url": "modules/types/edition/slick_grid/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "slickCheck": [
                [
                  "enableCellNavigation",
                  "rowNumbering",
                  "forceFitColumns",
                  "highlightScroll",
                  "editable",
                  "enableAddRow"
                ]
              ],
              "autoColumns": [
                [
                  "reorder",
                  "remove"
                ]
              ],
              "toolbar": [
                []
              ],
              "colorjpath": [
                []
              ],
              "slick.defaultColumnWidth": [
                null
              ],
              "slick.rowHeight": [
                null
              ],
              "slick.headerRowHeight": [
                30
              ],
              "slick.selectionModel": [
                "row"
              ],
              "idProperty": [
                ""
              ],
              "filterType": [
                "pref"
              ],
              "filterRow": [
                "// Documentation: https://github.com/NPellet/visualizer/blob/87ba3af17e07f6766c266385c41b177d5094150b/src/modules/types/edition/slick_grid/view.js#L1253-L1279"
              ],
              "customJpaths": [
                "title,rights,rev"
              ]
            }
          ],
          "cols": [
            [
              {
                "name": "Date",
                "jpath": [
                  "date"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "dateFormat:YYYY-MM-DD",
                "editorOptions": "",
                "width": 117,
                "hideColumn": []
              },
              {
                "name": "Id",
                "jpath": [
                  "id"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 117,
                "hideColumn": []
              },
              {
                "name": "Kind",
                "jpath": [
                  "kind"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 117,
                "hideColumn": []
              },
              {
                "name": "Description",
                "jpath": [
                  "description"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 117,
                "hideColumn": []
              },
              {
                "name": "viewURL",
                "jpath": [
                  "viewURL"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 116,
                "hideColumn": []
              },
              {
                "name": "Icon",
                "jpath": [
                  "icon"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 116,
                "hideColumn": []
              },
              {
                "name": "Title",
                "jpath": [
                  "title"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 106,
                "hideColumn": []
              },
              {
                "name": "BG",
                "jpath": [
                  "bgcolor"
                ],
                "editor": "color",
                "forceType": "color",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 48,
                "hideColumn": []
              },
              {
                "name": "FC",
                "jpath": [
                  "fontcolor"
                ],
                "editor": "color",
                "forceType": "color",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 44,
                "hideColumn": []
              },
              {
                "name": "Rights",
                "jpath": [
                  "rights"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 266,
                "hideColumn": []
              },
              {
                "name": "Empty",
                "jpath": [
                  "empty"
                ],
                "editor": "boolean",
                "forceType": "",
                "formatter": "typerenderer",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 116,
                "hideColumn": []
              }
            ]
          ],
          "actionCols": [
            [
              {
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  0,
                  0,
                  0,
                  1
                ],
                "position": "end",
                "clickMode": "text"
              }
            ]
          ],
          "groupings": [
            [
              {
                "getter": []
              }
            ]
          ],
          "actionOutButtons": [
            [
              {}
            ]
          ],
          "data": [
            {
              "saveInView": [
                [
                  "yes"
                ]
              ],
              "varname": [
                "tiles"
              ],
              "data": [
                "[{\"id\":\"Samples\",\"kind\":\"nbSample\",\"description\":\"Number of sample\",\"data\":\"\",\"text\":\"\",\"bgcolor\":\"rgb(255, 242, 204)\",\"fontcolor\":\"black\",\"date\":\"2016-05-06\",\"empty\":false,\"line\":0,\"title\":\"cache:nbSamples\"},{\"id\":\"Reactions\",\"viewURL\":\"a6fb774a50448cc3edd52dd6dfd275ea\",\"kind\":\"optionalSample\",\"description\":\"Notebook\",\"icon\":\"ci-icon-glassware-round-flask\",\"bgcolor\":\"rgb(255, 242, 204)\",\"line\":0,\"date\":\"2017-04-30\",\"fontcolor\":\"rgb(0, 0, 0)\"},{\"id\":\"Structure search\",\"kind\":\"optionalSample\",\"description\":\"Structure search\",\"viewURL\":\"aaa5f97c7cde94741de2938b106bb0d4\",\"data\":\"\",\"text\":\"\",\"icon\":\"ci-icon-structure-search\",\"bgcolor\":\"rgb(255, 242, 204)\",\"fontcolor\":\"black\",\"date\":\"2016-09-20\",\"line\":0},{\"viewURL\":\"83e55c39f2601bc912a45f049e2bd424\",\"description\":\"OCL\",\"id\":\"OCL\",\"bgcolor\":\"rgb(255, 242, 204)\",\"rights\":\"admin@cheminfo.org\",\"line\":0,\"fontcolor\":\"rgb(0, 0, 0)\"},{\"id\":\"OS\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"Open/edit sample\",\"viewURL\":\"15c9a2dcd55c963fdedf2c18a1471b03\",\"data\":\"\",\"text\":\"\",\"icon\":\"fa-edit\",\"bgcolor\":\"rgb(255, 242, 204)\",\"fontcolor\":\"black\",\"date\":\"2016-05-06\",\"line\":0},{\"date\":\"2017-05-09\",\"id\":\"attachments\",\"kind\":\"sample\",\"description\":\"Upload attachments\",\"icon\":\"fa-edit\",\"bgcolor\":\"rgb(255, 242, 204)\",\"fontcolor\":\"rgb(0, 0, 0)\",\"rights\":\"admin@cheminfo.org\",\"viewURL\":\"f795f6dc38df9221ca34bf288aa015aa\",\"line\":0},{\"id\":\"\",\"line\":1,\"empty\":true},{\"id\":\"PP\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"1D NMR peak picking\",\"viewURL\":\"4c986ed7d921b11fbe6f20240f0df3a8\",\"data\":\"\",\"text\":\"\",\"icon\":\"ci-icon-nmr-peak-picking\",\"bgcolor\":\"rgb(182, 215, 168)\",\"fontcolor\":\"black\",\"date\":\"2016-05-06\",\"line\":1},{\"id\":\"Overlay NMR\",\"kind\":\"optionalSample\",\"description\":\"Overlay NMR\",\"viewURL\":\"f162299d0efd3f7c21b5542c85003689\",\"data\":\"\",\"text\":\"\",\"icon\":\"ci-icon-nmr-overlay\",\"bgcolor\":\"rgb(182, 215, 168)\",\"fontcolor\":\"black\",\"date\":\"2016-05-06\",\"line\":1,\"rev\":\"\"},{\"id\":\"1H\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"NMR predict 1H\",\"viewURL\":\"eea0ba081ea2cc99da5c1aed2f29a0a8\",\"data\":\"\",\"text\":\"\",\"icon\":\"ci-icon-nmr-1h\",\"bgcolor\":\"rgb(182, 215, 168)\",\"fontcolor\":\"black\",\"date\":\"2016-07-06\",\"line\":1},{\"id\":\"13C\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"NMR predict 13C\",\"viewURL\":\"b50564ac9d207212f8e5ae8167a45f3c\",\"icon\":\"ci-icon-nmr-13c\",\"bgcolor\":\"rgb(182, 215, 168)\",\"fontcolor\":\"black\",\"date\":\"2016-08-06\",\"line\":1},{\"id\":\"COSY\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"NMR predict COSY\",\"viewURL\":\"b50564ac9d207212f8e5ae8167a607ed\",\"icon\":\"ci-icon-nmr-1h1h\",\"bgcolor\":\"rgb(182, 215, 168)\",\"fontcolor\":\"black\",\"date\":\"2016-08-06\",\"line\":1},{\"id\":\"HMBC\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"NMR predict HMBC\",\"viewURL\":\"b50564ac9d207212f8e5ae8167a68433\",\"icon\":\"ci-icon-nmr-1h13c\",\"bgcolor\":\"rgb(182, 215, 168)\",\"fontcolor\":\"black\",\"date\":\"2016-08-06\",\"line\":1},{\"empty\":true},{\"id\":\"F\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"Mass fragmentation\",\"viewURL\":\"0e35f561fff36fef6c9e7341a9eec858\",\"data\":\"\",\"text\":\"\",\"icon\":\"fa-bomb\",\"bgcolor\":\"rgb(244, 204, 204)\",\"fontcolor\":\"black\",\"date\":\"2016-07-06\",\"line\":2},{\"id\":\"MF\",\"kind\":\"sample\",\"description\":\"Monoisotopic mass\",\"viewURL\":\"4a06cbbc25197036518fab2ea6ff961d\",\"data\":\"\",\"text\":\"\",\"icon\":\"ci-icon-mass-monoisotopic\",\"bgcolor\":\"rgb(244, 204, 204)\",\"fontcolor\":\"black\",\"date\":\"2016-07-06\",\"line\":2},{\"viewURL\":\"b60d4cd22af351b3996cb3321f169a0e\",\"bgcolor\":\"rgb(244, 204, 204)\",\"id\":\"Cont\",\"kind\":\"optionalSample\",\"description\":\"Mass contaminants\",\"fontcolor\":\"rgb(0, 0, 0)\",\"date\":\"2017-05-15\",\"line\":2},{\"viewURL\":\"8fcf268d9a86be15206e3bc1fa1dca49\",\"id\":\"jMsPept\",\"kind\":\"optionalSample\",\"description\":\"Peptide analysis\",\"bgcolor\":\"rgb(244, 204, 204)\",\"fontcolor\":\"rgb(0, 0, 0)\",\"date\":\"2017-05-15\",\"line\":2},{\"empty\":true},{\"id\":\"Dia\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"Diastereotopic\",\"viewURL\":\"b50564ac9d207212f8e5ae816795fb39\",\"icon\":\"ci-icon-structure-diastereotopic\",\"bgcolor\":\"rgb(207, 226, 243)\",\"fontcolor\":\"black\",\"date\":\"2016-08-06\",\"line\":3},{\"id\":\"3D\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"3D model\",\"viewURL\":\"0e019bb4d797395213d22aca403d2c93\",\"icon\":\"ci-icon-structure-3d-model\",\"bgcolor\":\"rgb(207, 226, 243)\",\"fontcolor\":\"black\",\"date\":\"2016-08-06\",\"line\":3},{\"id\":\"Conf\",\"kind\":\"sample\",\"requires\":\"sample\",\"description\":\"Conformations\",\"viewURL\":\"0e019bb4d797395213d22aca4043260e\",\"icon\":\"ci-icon-structure-conformers\",\"bgcolor\":\"rgb(207, 226, 243)\",\"fontcolor\":\"black\",\"date\":\"2016-08-06\",\"line\":3,\"rights\":\"\"},{\"empty\":true},{\"viewURL\":\"105a8192b3046702221775d1c09485d2\",\"description\":\"Format manager\",\"rights\":\"admin@cheminfo.org\",\"icon\":\"fa-edit\",\"kind\":\"optionalSample\",\"id\":\"formatManager\",\"line\":4,\"bgcolor\":\"rgb(217, 210, 233)\",\"fontcolor\":\"rgb(0, 0, 0)\"},{\"description\":\"Sample manager\",\"viewURL\":\"83e55c39f2601bc912a45f049e7c9645\",\"rights\":\"admin@cheminfo.org\",\"icon\":\"fa-edit\",\"kind\":\"optionalSample\",\"id\":\"sampleManager\",\"line\":4,\"bgcolor\":\"rgb(217, 210, 233)\",\"fontcolor\":\"rgb(0, 0, 0)\"}]"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "admin": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "admin"
        },
        "Links": {
          "position": {
            "left": 52,
            "top": 0
          },
          "size": {
            "width": 135,
            "height": 79
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 11,
      "vars_in": [
        {
          "rel": "list",
          "name": "tiles"
        }
      ],
      "actions_in": [
        {}
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": ""
    }
  ],
  "variables": [
    {
      "varname": "reagentsCalculator",
      "jpath": [
        "reagentsCalculator"
      ]
    },
    {
      "varname": "samplesCalculator",
      "jpath": [
        "samplesCalculator"
      ]
    },
    {
      "varname": "reportTemplate",
      "jpath": [
        "reportTemplate"
      ]
    },
    {
      "varname": "eln-procedure-snipets",
      "jpath": [
        "eln-procedure-snipets"
      ]
    },
    {
      "varname": "reactions",
      "jpath": [
        "reactions"
      ]
    }
  ],
  "aliases": [
    {
      "path": "https://www.lactame.com/github/cheminfo-js/visualizer-helper/1b065087a4f16d810b79c5ea153b00161d791c49/",
      "alias": "vh"
    },
    {
      "path": "https://a17ef982.ngrok.io/cheminfo-js/visualizer-helper/",
      "alias": "vhxx"
    }
  ],
  "configuration": {
    "title": "Samples"
  },
  "actionscripts": [
    {
      "sections": {},
      "groups": {
        "action": [
          {
            "name": [
              "togglePublic"
            ],
            "script": [
              "require(['superagent', 'src/util/ui'], function(superagent, ui) {\n    var couchUrl = API.cache('couchUrl');\n    var database = API.cache('database');\n    var roc = API.cache('rocReaction');\n    if(value.$owners.indexOf('anonymousRead') !== -1) {\n        makePrivate();\n    } else {\n        makePublic();\n    }\n    \n    function getEntry(id) {\n        roc.get(id);\n    }\n    \n    function makePublic() {\n        superagent.put(couchUrl + 'db/' + database + '/entry/' + value._id + '/_owner/anonymousRead')\n            .withCredentials()\n            .then(function(res) {\n                if(res.status === 200) {\n                    ui.showNotification('reaction was made public', 'success')\n                    getEntry(value._id);\n                } else {\n                    ui.showNotification('make reaction public failed', 'error');\n                }\n            }).catch(function(err) {\n                ui.showNotification('make reaction public failed', 'error');\n            });\n    }\n    \n    function makePrivate() {\n        superagent.del(couchUrl + 'db/' + database + '/entry/' + value._id + '/_owner/anonymousRead')\n            .withCredentials()\n            .then(function(res) {\n                if(res.status === 200) {\n                    ui.showNotification('reaction was made private', 'success');\n                    getEntry(value._id)\n                } else {\n                    ui.showNotification('make reaction private failed', 'error');\n                }\n            }).catch(function(err) {\n                ui.showNotification('make reaction private failed', 'error');\n            });\n    }\n});"
            ]
          }
        ]
      }
    },
    {
      "sections": {},
      "groups": {
        "action": [
          {
            "name": [
              "Help"
            ],
            "script": [
              "var url='https://docs.google.com/document/d/1wfKyk9aw34F_mY9w1OZn089TOWgf8i6FVDwtL0FFbpo/edit?usp=sharing';\n \nrequire(['src/util/ui'], function(UI) {\n    UI.dialog(\n        '<iframe width=\"100%\" height=\"100%\" src=\"'+url+'\"></iframe>',\n        {width:1000, height: 800}\n    );\n})\n\n\n"
            ]
          }
        ]
      }
    },
    {
      "sections": {},
      "groups": {
        "action": [
          {
            "name": [
              "ShowUserInfo"
            ],
            "script": [
              "require(['vh/rest-on-couch/showUserInfo'], function(showUserInfo) {\n    var userInfo=API.cache('userInfo');\n    showUserInfo(userInfo);\n})"
            ]
          }
        ]
      }
    }
  ],
  "init_script": [
    {
      "sections": {},
      "groups": {
        "general": [
          {
            "script": [
              "var couchUrl = document.location.href.replace(/(\\/\\/.*?\\/).*/,'$1roc').replace('blob:','');\n\nif (document.location.href.indexOf('cheminfo.org')!==-1) {\n    couchUrl = 'https://mydb.cheminfo.org/';\n}\n\nvar database = 'eln';\nvar couchDB = {\n    url:couchUrl,\n    database:database,\n    kind:'sample'\n}\n\n//API.cache('domain', 'org.cheminfo.');\n\n/*\nvar printer = {\n    couchDB: {\n        url: 'https://eln.epfl.ch/roc/',\n        database: 'printers',\n        proxy: 'https://eln.epfl.ch/printer-proxy'\n    },\n    proxy: 'https://eln.epfl.ch/printer-proxy'\n};\n\nAPI.cache('printerConfig', printer);\n*/\n\nAPI.cache('couchDB',couchDB);\n\n// For demonstration purpose\nif((typeof IframeBridge)!='undefined'){\n    IframeBridge.onMessage(function(data) {\n        switch (data.type) {\n            case 'tab.message':\n                switch (data.message.action) {\n                    case 'selectEntry':\n                        return selectEntry(data.message.uuid);\n                    default:\n                        console.log('got an unknown message', data.message);\n                        return;\n                }\n                break;\n            case 'tab.focus':\n                API.doAction('refreshSample');\n                break;\n        }\n    });\n    IframeBridge.ready();\n}\n\nfunction selectEntry(uuid) {\n    if (!uuid) return;\n    const samples = API.getData('filteredSamples');\n    if (samples) {\n        const index = samples.findIndex(sample => String(sample.id) === uuid);\n        if (index !== -1) {\n            API.doAction('clickRow', index);\n        }\n    }\n}\n\n// Load custom font\nrequire(['src/util/util'], function(Util) {\n    Util.loadCss('https://www.lactame.com/lib/cheminfo-font/0.1.4/style.css');\n})"
            ]
          }
        ]
      }
    }
  ],
  "custom_filters": [
    {
      "sections": {
        "modules": [
          {
            "sections": {},
            "groups": {
              "modules": [
                [
                  {}
                ]
              ]
            }
          }
        ],
        "filtersLib": [
          {
            "sections": {},
            "groups": {
              "filters": [
                [
                  {}
                ]
              ]
            }
          }
        ],
        "filters": [
          {
            "sections": {},
            "groups": {
              "filter": [
                {
                  "name": [
                    null
                  ],
                  "script": [
                    null
                  ]
                }
              ],
              "libs": [
                [
                  {}
                ]
              ]
            }
          }
        ]
      },
      "groups": {}
    }
  ],
  "actionfiles": [
    {
      "sections": {},
      "groups": {
        "action": [
          [
            {}
          ]
        ]
      }
    }
  ]
}
