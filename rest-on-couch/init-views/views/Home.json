{
  "version": "2.129.0",
  "grid": {
    "layers": {
      "Default layer": {
        "name": "Default layer"
      },
      "SampleTocActions": {
        "name": "SampleTocActions"
      },
      "Tiles Layout": {
        "name": "Tiles Layout"
      },
      "Tiles Edition": {
        "name": "Tiles Edition"
      },
      "Tiles Actions": {
        "name": "Tiles Actions"
      },
      "Tiles Management Actions": {
        "name": "Tiles Management Actions"
      }
    },
    "xWidth": 10,
    "yHeight": 10
  },
  "modules": [
    {
      "url": "modules/types/edition/slick_grid/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "slickCheck": [
                [
                  "enableCellNavigation",
                  "rowNumbering",
                  "forceFitColumns",
                  "highlightScroll",
                  "editable"
                ]
              ],
              "copyPaste": [
                []
              ],
              "copyPasteOptions": [
                [
                  "newRows"
                ]
              ],
              "autoColumns": [
                []
              ],
              "toolbar": [
                []
              ],
              "colorjpath": [
                []
              ],
              "slick.defaultColumnWidth": [
                null
              ],
              "slick.rowHeight": [
                "150"
              ],
              "slick.headerRowHeight": [
                30
              ],
              "slick.selectionModel": [
                "row"
              ],
              "idProperty": [
                ""
              ],
              "filterType": [
                "pref"
              ],
              "filterRow": [
                "if(this.event === 'renderAction') {\n    if(this.column.name === 'Hide') {\n        if(this.row.item.value &&\n            this.row.item.value.hidden &&\n            DataObject.resurrect(this.row.item.value.hidden)\n        ) {\n            this.renderOptions.icon = 'fa-eye-slash';\n            this.renderOptions.tooltip = 'Make the product visible';\n        } else {\n            this.renderOptions.icon = 'fa-eye';\n            this.renderOptions.tooltip = 'Hide the product';\n        }  \n    }\n}\n\nif(this.event === 'renderAction' && this.column.id === 'Print') {\n    let sampleFormats=API.cache('sampleFormats');\n    if (Array.isArray(sampleFormats) && sampleFormats.length>0) {\n        this.renderOptions.disabled = false;\n    } else {\n        this.renderOptions.disabled = true;\n    }\n}\n"
              ],
              "customJpaths": [
                ""
              ]
            }
          ],
          "cols": [
            [
              {
                "name": "Product reference",
                "jpath": [
                  "value"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "twig:` <div style=\"line-height:normal\"> \t<b>{{reference}}</b> \t<table style=\"font-size:xx-small\"> \t{% for k in keyword %} \t\t<tr> \t\t<th style=\"text-align: left\">{{k.kind}}</th> \t\t<td>{{k.value}}</td> \t\t</tr> \t{%endfor%} \t{% for key,value in meta %}<tr><th style=\"text-align: left\">{{key}}</th><td>{{value}}</td></tr>{%endfor%}</table><b style=\"color: darkgreen\">{{location}}</b> </div>`",
                "editorOptions": "",
                "width": 107,
                "hideColumn": []
              },
              {
                "name": "Last modif.",
                "jpath": [
                  "value",
                  "modificationDate"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "dateFormat:'YYYY-MM-DD'",
                "editorOptions": "",
                "width": 78,
                "hideColumn": []
              },
              {
                "name": "Structure",
                "jpath": [
                  "value",
                  "ocl"
                ],
                "editor": "none",
                "forceType": "oclID",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 142,
                "hideColumn": []
              },
              {
                "name": "nb 1d",
                "jpath": [
                  "value"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "twig:`<div style=\"line-height:normal\">{%if nb1h%}<sup>1</sup>H: {{nb1h}}<br>{%endif%}{%if nb13c%}<sup>13</sup>C: {{nb13c}}{%endif%}</div>`",
                "editorOptions": "",
                "width": 41,
                "hideColumn": []
              },
              {
                "name": "nb 2d",
                "jpath": [
                  "value"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "twig:'<div style=\"line-height:normal\">{{nb2d}}</div>'",
                "editorOptions": "",
                "width": 41,
                "hideColumn": []
              },
              {
                "name": "nb ms",
                "jpath": [
                  "value"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "twig:'<div style=\"line-height:normal\">{{nbMass}}</div>'",
                "editorOptions": "",
                "width": 41,
                "hideColumn": []
              },
              {
                "name": "nb IR",
                "jpath": [
                  "value"
                ],
                "editor": "none",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "twig:'<div style=\"line-height:normal\">{{nbIR}}</div>'",
                "editorOptions": "",
                "width": 50,
                "hideColumn": []
              }
            ]
          ],
          "actionCols": [
            [
              {
                "name": "Print",
                "tooltip": "Print sample label",
                "icon": "fa-print",
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  0,
                  0,
                  0,
                  1
                ],
                "action": "PrintLabel",
                "position": "end",
                "clickMode": "text",
                "isAction": true
              },
              {
                "name": "Hide",
                "tooltip": "Show / Hide product",
                "icon": "fa-eye",
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  0,
                  0,
                  0,
                  1
                ],
                "action": "ToggleHiddenEntry",
                "position": "end",
                "clickMode": "text",
                "isAction": true
              }
            ]
          ],
          "groupings": [
            [
              {
                "getter": []
              }
            ]
          ],
          "actionOutButtons": [
            [
              {}
            ]
          ],
          "data": [
            {
              "saveInView": [
                []
              ],
              "varname": [
                ""
              ],
              "data": [
                "[]"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 15
          },
          "size": {
            "width": 54,
            "height": 72
          },
          "zIndex": 0,
          "display": true,
          "title": "Double click to open a sample, one click to select it",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 54,
            "height": 72
          },
          "zIndex": 0,
          "display": true,
          "title": "Double click to open a sample, one click to select it",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 62
          },
          "size": {
            "width": 51,
            "height": 25
          },
          "zIndex": 0,
          "display": true,
          "title": "Double click to open a sample, one click to select it",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 15
          },
          "size": {
            "width": 54,
            "height": 72
          },
          "zIndex": 0,
          "display": false,
          "title": "Double click to open a sample, one click to select it",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 70
          },
          "size": {
            "width": 64,
            "height": 30
          },
          "zIndex": 0,
          "display": true,
          "title": "Double click to open a sample, one click to select it",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 15
          },
          "size": {
            "width": 54,
            "height": 72
          },
          "zIndex": 0,
          "display": false,
          "title": "Double click to open a sample, one click to select it",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 1,
      "vars_in": [
        {
          "rel": "list",
          "name": "sampleTocFiltered"
        }
      ],
      "actions_in": [
        {
          "rel": "selectRow",
          "name": "clickRow"
        },
        {
          "rel": "rerender",
          "name": "rerenderToc"
        }
      ],
      "title": "Double click to open a sample, one click to select it",
      "vars_out": [
        {
          "event": "onRowActive",
          "rel": "row",
          "jpath": [],
          "name": "tocSample"
        }
      ],
      "actions_out": [
        {
          "event": "onDoubleClick",
          "rel": "row",
          "jpath": [],
          "name": "rowDoubleClicked"
        }
      ],
      "zindex": 3,
      "toolbar": {
        "custom": [
          [
            {
              "title": "Refresh",
              "icon": "fa-sync",
              "action": "refresh",
              "position": "end",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Show user info",
              "icon": "fa-user",
              "action": "ShowUserInfo",
              "position": "end",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Show / Hide hidden entries",
              "icon": "fa-eye",
              "action": "ToggleShowHiddenEntries",
              "position": "end",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Copy table of contents",
              "icon": "fa-copy",
              "action": "copyToc",
              "position": "end",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Sort by product code",
              "icon": "fa-sort-alpha-down",
              "action": "SortCode",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Reverse sort by product code",
              "icon": "fa-sort-alpha-up",
              "action": "SortCodeReverse",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Sort by modification date",
              "icon": "fa-sort-numeric-up",
              "action": "SortDate",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            },
            {
              "title": "Reverse sort by modification date",
              "icon": "fa-sort-numeric-down",
              "action": "SortDateReverse",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/array_search/smart_array_filter/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "debounce": [
                250
              ],
              "limit": [
                0
              ],
              "initialValue": [
                ""
              ],
              "placeholder": [
                "Search for samples"
              ],
              "fontSize": [
                24
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 7,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 7,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Layout": {
          "position": {
            "left": 7,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 7,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 7,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 7,
            "top": 0
          },
          "size": {
            "width": 35,
            "height": 8
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 2,
      "vars_in": [
        {
          "rel": "input",
          "name": "sampleToc"
        }
      ],
      "actions_in": [
        {}
      ],
      "title": "",
      "vars_out": [
        {
          "event": "onQuery",
          "rel": "output",
          "jpath": [],
          "name": "sampleTocFiltered"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "zindex": 2,
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/edition/onde/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "hasButton": [
                []
              ],
              "button_text": [
                "Export"
              ],
              "debouncing": [
                0
              ],
              "output": [
                "modified"
              ],
              "mode": [
                "schema"
              ],
              "schemaSource": [
                "variable"
              ],
              "schema": [
                ""
              ],
              "onchangeFilter": [
                null
              ]
            }
          ],
          "data": [
            {
              "saveInView": [
                []
              ],
              "varname": [
                ""
              ],
              "data": [
                "{}"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 7,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 7,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Layout": {
          "position": {
            "left": 7,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 7,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 7,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 7,
            "top": 4
          },
          "size": {
            "width": 22,
            "height": 6
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 3,
      "vars_in": [
        {
          "rel": "schema",
          "name": "groupFormSchema"
        },
        {
          "rel": "inputValue",
          "name": "groupForm"
        }
      ],
      "actions_in": [
        {}
      ],
      "title": "",
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "zindex": 3,
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/edition/rich_text/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "editable": [
                []
              ],
              "debouncing": [
                0
              ],
              "modifyInVariable": [
                []
              ],
              "storeInView": [
                [
                  "yes"
                ]
              ],
              "autoHeight": [
                []
              ],
              "bgColor": [
                [
                  255,
                  255,
                  255,
                  1
                ]
              ],
              "postit": [
                []
              ],
              "html": [
                [
                  "yes"
                ]
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 8
          },
          "size": {
            "width": 55,
            "height": 10
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 7
          },
          "size": {
            "width": 55,
            "height": 10
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 7
          },
          "size": {
            "width": 55,
            "height": 10
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 7
          },
          "size": {
            "width": 55,
            "height": 10
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 7
          },
          "size": {
            "width": 55,
            "height": 10
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 7
          },
          "size": {
            "width": 55,
            "height": 10
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 4,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin"
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "richtext": "<h3>If you are using those tools please don&#39;t forget to cite us !</h3>\n\n<p>The C6H6 NMR repository: An integral solution to control the flow of your data from the magnet to the public.<br />\nPatiny L, Zasso M, Kostro D, Bernal A, Castillo AM, Bola&ntilde;os A, Asencio MA, Pellet N, Todd M, Schloerer N, Kuhn S. Magnetic Resonance in Chemistry.&nbsp;<strong>2017.</strong></p>\n\n<p>&nbsp;</p>\n",
      "title": "",
      "zindex": 1
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "switch (this.action.name) {\n    case 'copyView':\n        navigator.clipboard.writeText(JSON.stringify(this.action.value));\n        break;\n    case 'pasteView':\n        const row = this.action.value;\n        const rowIndex = row.__parent ? row.__parent.indexOf(row) : 0;\n        let item=JSON.parse(await navigator.clipboard.readText());\n        API.doAction('insertTile', {\n            row: rowIndex,\n            item,\n        });\n        break;\n    case 'getLatestViewRevision': {\n        let viewURL = this.action.value.viewURL;\n        if(!viewURL) return;\n        const doc = await getLatestViewRevision(String(viewURL));\n        if(doc) {\n            // we will update everywhere\n            const categories=API.getData('categories');\n            categories.forEach(category => {\n                category.tiles.forEach(tile => {\n                    if (String(tile.viewURL) === String(this.action.value.viewURL)) {\n                        tile.rev = doc._rev;\n                    }\n                    \n                })\n            })\n            categories.triggerChange();\n           // this.action.value.setChildSync(['rev'], doc._rev)\n            UI.showNotification(`revision updated to ${doc._rev}`, 'success')\n        }\n        break;\n    }\n    case 'insertViewAfter': {\n        const row = this.action.value;\n        const rowIndex = row.__parent ? row.__parent.indexOf(row) : 0;\n        const choice = await getViewChoice();\n        const doc = await getLatestViewRevision(choice.id);\n        if(!choice) return;\n        API.doAction('insertTile', {\n            row: rowIndex,\n            item: getTileDefinition(doc)\n        });\n        break;\n    }\n    default: {\n        console.warn('unhandled action', this.action);\n    }\n}\n\n\nasync function getLatestViewRevision(id) {\n    const response = await fetch(`https://www.cheminfo.org/couch/cheminfo-public/${id}`);\n    return response.json();\n}\n\n\n\nasync function getViewChoice() {\n    const response = await fetch('https://www.cheminfo.org/couch/cheminfo-public/_design/app/_view/docs?key=[%22c6h6%22,%20%22admin@cheminfo.org%22]');\n    const result = await response.json();\n    const choice = await UI.chooseSearch(result.rows, {\n        text: el => el.value.title,\n        groupBy: (el) => el.value.category || 'No category'\n    });\n    return choice;\n}\n\nfunction getTileDefinition(doc) {\n    return {\n        id: doc.$content.name,\n        rev: doc._rev,\n        icon: doc.$content.icon,\n        description: doc.$content.title,\n        viewURL: doc._id,\n        bgcolor: 'rgb(255, 255, 255)',\n        empty: false\n    }\n}\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "src/util/ui",
                "alias": "UI"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 55,
            "top": 0
          },
          "size": {
            "width": 71,
            "height": 48
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 129,
            "top": 0
          },
          "size": {
            "width": 57,
            "height": 74
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 55,
            "top": 0
          },
          "size": {
            "width": 71,
            "height": 48
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 46,
            "height": 82
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 46,
            "height": 82
          },
          "zIndex": 0,
          "display": true,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 5,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "getLatestViewRevision"
        },
        {
          "rel": "execute",
          "name": "insertViewAfter"
        },
        {
          "rel": "execute",
          "name": "copyView"
        },
        {
          "rel": "execute",
          "name": "pasteView"
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Code to manage the links"
    },
    {
      "url": "modules/types/display/template-twig/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "selectable": [
                []
              ],
              "template": [
                ""
              ],
              "modifyInForm": [
                []
              ],
              "debouncing": [
                0
              ],
              "formOptions": [
                [
                  "keepFormValueIfDataUndefined"
                ]
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 55,
            "top": 55
          },
          "size": {
            "width": 127,
            "height": 32
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            242,
            204,
            0.35
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 57,
            "top": 50
          },
          "size": {
            "width": 66,
            "height": 37
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            242,
            204,
            0.35
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 57,
            "top": 50
          },
          "size": {
            "width": 66,
            "height": 37
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            242,
            204,
            0.35
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 57,
            "top": 50
          },
          "size": {
            "width": 66,
            "height": 37
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            242,
            204,
            0.35
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 6,
      "vars_in": [
        {
          "rel": "tpl",
          "name": "tocTemplate"
        },
        {
          "rel": "value",
          "name": "tocSample"
        }
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": ""
    },
    {
      "url": "modules/types/edition/slick_grid/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "slickCheck": [
                [
                  "enableCellNavigation",
                  "rowNumbering",
                  "forceFitColumns",
                  "highlightScroll",
                  "editable",
                  "enableAddRow",
                  "filterColumns"
                ]
              ],
              "copyPaste": [
                []
              ],
              "copyPasteOptions": [
                [
                  "newRows"
                ]
              ],
              "autoColumns": [
                [
                  "reorder",
                  "remove"
                ]
              ],
              "toolbar": [
                []
              ],
              "colorjpath": [
                []
              ],
              "slick.defaultColumnWidth": [
                null
              ],
              "slick.rowHeight": [
                null
              ],
              "slick.headerRowHeight": [
                30
              ],
              "slick.selectionModel": [
                "row"
              ],
              "idProperty": [
                ""
              ],
              "filterType": [
                "pref"
              ],
              "filterRow": [
                "// Documentation: https://github.com/NPellet/visualizer/blob/87ba3af17e07f6766c266385c41b177d5094150b/src/modules/types/edition/slick_grid/view.js#L1253-L1279"
              ],
              "customJpaths": [
                "title,rights,rev,hide,data"
              ]
            }
          ],
          "cols": [
            [
              {
                "name": "Date",
                "jpath": [
                  "date"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "dateFormat:YYYY-MM-DD",
                "editorOptions": "",
                "width": 109,
                "hideColumn": []
              },
              {
                "name": "Id",
                "jpath": [
                  "id"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 110,
                "hideColumn": []
              },
              {
                "name": "Kind",
                "jpath": [
                  "kind"
                ],
                "editor": "select",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "sample;optionalSample;rawIframeSample;rawIframe;newTab",
                "width": 110,
                "hideColumn": []
              },
              {
                "name": "Description",
                "jpath": [
                  "description"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 143,
                "hideColumn": []
              },
              {
                "name": "viewURL",
                "jpath": [
                  "viewURL"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 242,
                "hideColumn": []
              },
              {
                "name": "rev",
                "jpath": [
                  "rev"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 78,
                "hideColumn": []
              },
              {
                "name": "Icon",
                "jpath": [
                  "icon"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 79,
                "hideColumn": []
              },
              {
                "name": "Title",
                "jpath": [
                  "title"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 187,
                "hideColumn": []
              },
              {
                "name": "BG",
                "jpath": [
                  "bgcolor"
                ],
                "editor": "color",
                "forceType": "color",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 66,
                "hideColumn": []
              },
              {
                "name": "Rights",
                "jpath": [
                  "rights"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 108,
                "hideColumn": []
              },
              {
                "name": "Hide",
                "jpath": [
                  "hide"
                ],
                "editor": "boolean",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 54,
                "hideColumn": []
              },
              {
                "name": "Empty",
                "jpath": [
                  "empty"
                ],
                "editor": "boolean",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 54,
                "hideColumn": []
              },
              {
                "name": "Data",
                "jpath": [
                  "data"
                ],
                "editor": "longtext",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "width": 50,
                "hideColumn": []
              }
            ]
          ],
          "actionCols": [
            [
              {
                "name": "⚈",
                "tooltip": "Copy view",
                "icon": "fa-copy",
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  180,
                  95,
                  6,
                  1
                ],
                "action": "copyView",
                "position": "end",
                "clickMode": "text",
                "isAction": true
              },
              {
                "name": "·",
                "tooltip": "Paste view",
                "icon": "fa-paste",
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  56,
                  118,
                  29,
                  1
                ],
                "action": "pasteView",
                "position": "end",
                "clickMode": "text",
                "isAction": true
              },
              {
                "name": "S",
                "tooltip": "Update view",
                "icon": "fa-sync",
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  0,
                  0,
                  0,
                  1
                ],
                "action": "getLatestViewRevision",
                "position": "end",
                "clickMode": "text",
                "isAction": true
              },
              {
                "name": "+",
                "tooltip": "Insert view after",
                "icon": "fa-plus",
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  74,
                  134,
                  232,
                  1
                ],
                "action": "insertViewAfter",
                "position": "end",
                "clickMode": "text",
                "isAction": true
              }
            ]
          ],
          "groupings": [
            [
              {
                "getter": []
              }
            ]
          ],
          "actionOutButtons": [
            [
              {}
            ]
          ],
          "data": [
            {
              "saveInView": [
                []
              ],
              "varname": [
                "tiles"
              ],
              "data": [
                ""
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 25,
            "top": 0
          },
          "size": {
            "width": 156,
            "height": 53
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 47,
            "top": 0
          },
          "size": {
            "width": 121,
            "height": 82
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 7,
      "vars_in": [
        {
          "rel": "list",
          "name": "categoryTiles"
        }
      ],
      "actions_in": [
        {
          "rel": "prependRow",
          "name": "prependTile"
        },
        {
          "rel": "insertRow",
          "name": "insertTile"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "Add view",
              "icon": "fa-plus-circle",
              "action": "insertViewAfter",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "",
      "zindex": 3
    },
    {
      "url": "modules/types/display/template-twig/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "selectable": [
                []
              ],
              "template": [
                "<div id=\"sample-tiles\"></div>"
              ],
              "modifyInForm": [
                []
              ],
              "debouncing": [
                0
              ],
              "formOptions": [
                [
                  "keepFormValueIfDataUndefined"
                ]
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 55,
            "top": 0
          },
          "size": {
            "width": 127,
            "height": 55
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 62,
            "height": 61
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        },
        "Tiles Actions": {
          "position": {
            "left": 78,
            "top": 0
          },
          "size": {
            "width": 106,
            "height": 77
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 8,
      "vars_in": [
        {
          "rel": "tpl",
          "name": "twigTemplate"
        },
        {
          "rel": "value",
          "name": "sampleTocFiltered"
        },
        {
          "rel": "value",
          "name": "tocSample"
        },
        {
          "rel": "value",
          "name": "categories"
        }
      ],
      "actions_in": [
        {}
      ],
      "title": "",
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "zindex": 1,
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ]
    },
    {
      "url": "modules/types/client_interaction/code_editor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "mode": [
                "html"
              ],
              "outputType": [
                null
              ],
              "btnvalue": [
                "Send script"
              ],
              "iseditable": [
                [
                  "editable"
                ]
              ],
              "hasButton": [
                [
                  "button"
                ]
              ],
              "variable": [
                []
              ],
              "storeOnChange": [
                [
                  "store"
                ]
              ],
              "debouncing": [
                1000
              ],
              "script": [
                "<style>\n#tiles .w-full {\n  width: 100%;\n}\n\n#tiles .h-full {\n  height: 100%;\n}\n\n#tiles .flex {\n  display: flex;\n}\n\n#tiles .flex-row {\n  flex-direction: row;\n}\n\n#tiles .flex-col {\n  flex-direction: column;\n}\n\n#tiles #navigation > div {\n  flex-grow: 1;\n  flex-basis: 0;\n}\n\n#tiles div.closed {\n  height: 0;\n  overflow: hidden;\n}\n\n#tiles div.opened {\n  height: auto;\n}\n\n#tiles h2.label {\n  margin: 0 1px;\n  padding: 10px 4px;\n  background-color: #eaeaea;\n  cursor: pointer;\n}\n\n#tiles h2.selected {\n  background-color: gray;\n  color: white;\n}\n\n#tiles #tilesDiv {\n  display: flex;\n  flex-direction: row;\n}\n\n#tiles #tilesDiv > div {\n  flex-grow: 1;\n  flex-basis: 0;\n}\n\n#tiles .on-tabs-tiles {\n  display: inline-flex;\n  flex-wrap: wrap;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n#tiles .on-tabs-tiles .cell {\n  position: relative;\n  border: 2px solid white;\n}\n\n#tiles .on-tabs-tiles .cell.inactive {\n  opacity: 0.5;\n}\n\n#tiles .on-tabs-tiles .cell div {\n  text-align: center;\n}\n\n#tiles .on-tabs-tiles .content {\n  width: 120px;\n  height: 120px;\n  display: inline-flex;\n  font-size: 1.2em;\n}\n\n#tiles .on-tabs-tiles .hide {\n  background-color: rgba(255, 255, 255, 0.6);\n  position: absolute;\n  width: 120px;\n  height: 120px;\n  top: 0;\n  left: 0;\n  z-index: 100;\n}\n\n#tiles .on-tabs-tiles .cell .main {\n  margin: auto;\n}\n\n#tiles .on-tabs-tiles .cell .huge {\n  font-size: 4em;\n}\n\n#tiles .on-tabs-tiles .cell .large {\n  font-size: 3em;\n}\n\n#tiles .on-tabs-tiles .cell .medium {\n  font-size: 2em;\n}\n\n#tiles .on-tabs-tiles .cell .title {\n  font-weight: bold;\n  margin: auto;\n}\n\n#tiles .on-tabs-tiles .cell .header {\n  position: absolute;\n  font-size: 0.9em;\n  font-weight: bold;\n  text-align: center;\n  width: 100%;\n  z-index: 100;\n  margin-top: 4px;\n}\n\n#tiles .on-tabs-tiles .footer {\n  position: absolute;\n  bottom: 0em;\n  left: 0;\n  text-align: center;\n  width: 100%;\n  font-size: 10px;\n  margin-bottom: 4px;\n}\n\n#tiles .on-tabs-tiles .ribbon-wrapper {\n  width: 75px;\n  height: 75px;\n  overflow: hidden;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n}\n\n#tiles .on-tabs-tiles .ribbon {\n  font: bold 1em Sans-Serif;\n  color: white;\n  text-align: center;\n  transform: rotate(45deg);\n  position: relative;\n  padding: 3px 0px 0px 0px;\n  left: 0px;\n  top: 10px;\n  width: 120px;\n  background-color: rgba(255, 0, 0, 0.9);\n}\n\n#tiles .on-tabs-tiles .ribbon.beta {\n  background-color: rgba(0, 0, 255, 0.9);\n  z-index: 101;\n}\n\n</style>\n\n\n<div id='tiles' class='h-full w-full flex flex-col'>\n  <div id='navigation' class=\"flex flex-row w-full\" style=\"flex-grow: 1;\"></div>\n  <div id='content' class=\"flex flex-col w-full h-full\"></div>\n</div>\n\n<script>\nlet categories = window.categories || [];\nif (typeof API !== 'undefined') {\n    console.log('Drawing tiles', {API, categories})\n} else {\n    console.log('API is not defined', {categories})\n}\nif (typeof API !== 'undefined' && Array.isArray(categories)) {\n    const options = {\n        shouldRender: tile => {\n            if (tile.hide) return false;\n            let user = API.cache('userInfo').email;\n            return (checkRights(user, tile.rights, true));\n        },\n        ribbon: (tile) => {\n            if (tile.rights) {\n                return \"LIMITED\";\n            } else if (tile.date) {\n                const d = new Date(tile.date);\n                if (new Date() - d < 1296000000) {\n                    return \"NEW\";\n                }\n            }\n            return \"\";\n        },\n        isActive: tile => {\n            if (tile.kind === 'sample' || tile.kind === 'rawIframeSample') {\n                const sample = API.getData('tocSample');\n                if (sample) return true;\n            } else {\n                return true;\n            }\n            return false;\n        },\n        isLink: (tile) => true,\n        icon: (tile) => tile.icon,\n        title: (tile) => tile.icon ? '' : checkCache(tile.title),\n        backgroundColor: (tile) => String(tile.bgcolor),\n        color: (tile) => tile.fontcolor || \"black\",\n        header: (tile) => tile.description,\n        footer: (tile) => tile.id,\n        onTileClick: (event, tile) => {\n            handleTileClick(tile);\n        },\n    };\n\n    function handleTileClick(tile) {\n        const sample = API.getData('tocSample');\n        API.doAction('handleTileClick', {\n            sample: {\n                uuid: sample && sample.id,\n                reference: sample && sample.key.slice(1).join(' ')\n            },\n            tile\n        })\n    }\n\n\n    function checkCache(val) {\n        if (val) {\n            const parts = val.split(':');\n            if (parts[0] === 'cache') {\n                const jpath = parts[1].split('.');\n                const name = jpath.splice(0, 1);\n                if (jpath.length === 0) return API.cache(name[0]);\n                return DataObject.resurrect(DataObject.check(Object.assign({}, API.cache(name[0]))).getChildSync(jpath));\n            } else {\n                return val;\n            }\n        }\n    }\n\n    if (API.cache('userInfo').email !== 'admin@cheminfo.org') {\n        categories = categories.filter(category => category.label !== \"Dev\");\n    }\n    categories = JSON.parse(JSON.stringify(categories))\n\n    let tilesManager = new TilesManager({ navigation: 'navigation', content: 'content' }, categories, options);\n    tilesManager.repaint();\n    API.cache('tilesManager', tilesManager);\n}\n\n  \n</script>"
              ]
            }
          ],
          "ace": [
            {
              "useSoftTabs": [
                [
                  "yes"
                ]
              ],
              "tabSize": [
                4
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "HTML code to generate the Tiles",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "HTML code to generate the Tiles",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 63,
            "top": 0
          },
          "size": {
            "width": 83,
            "height": 84
          },
          "zIndex": 0,
          "display": true,
          "title": "HTML code to generate the Tiles",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "HTML code to generate the Tiles",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "HTML code to generate the Tiles",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "HTML code to generate the Tiles",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 9,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "event": "onEditorChange",
          "rel": "data",
          "jpath": [],
          "name": "twigTemplate"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "HTML code to generate the Tiles"
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                [
                  "yes"
                ]
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "const defaultOptions = {\n  onTileClick: (target) => {},\n  isNewTabLink: () => false,\n  ribbon: () => \"\",\n  isLink: () => true,\n  isActive: () => true,\n  shouldRender: () => true,\n  href: () => null,\n  backgroundColor: (tile) => tile.backgroundColor,\n  color: (tile) => tile.color,\n  header: (tile) => tile.header,\n  footer: (tile) => tile.footer,\n  title: (tile) => tile.title,\n  icon: (tile) => tile.icon,\n};\n\nconst defaultDivs = {\n  navigation: \"navigation\",\n  content: \"content\",\n};\n\nclass TilesManager {\n  constructor(divs = defaultDivs, categories = [], options = {}) {\n    this.labels = categories.map((category) => category.label);\n    this.tiles = categories.map((category) => category.tiles);\n    this.$navigationDiv = $(`#${divs.navigation}`);\n    this.$contentDiv = $(`#${divs.content}`);\n    this.content;\n    this.options = { ...defaultOptions, ...options };\n\n    this.openTab = parseInt(window.localStorage.getItem(\"tocOpenTab\") || 0);\n  }\n\n  findTile(viewURL) {\n    return this.tiles.flat().filter((tile) => tile.viewURL && tile.viewURL.match(viewURL))[0];\n  }\n\n  repaint() {\n    this.$navigationDiv.empty();\n    for (let index = 0; index < this.labels.length; index++) {\n      const $tab = buildTab(\n        index,\n        this.$contentDiv,\n        this.labels[index],\n        this.tiles[index],\n        this.openTab === index,\n        this.options\n      );\n      this.$navigationDiv.append($tab);\n    }\n  }\n}\n\nfunction buildTab(tabID, $contentDiv, label, tiles, state, options) {\n  const $mainContainer = $(`<div id=\"container_${label}\">`);\n\n  const $label = $(\n    `<h2 class=\"label ${\n      state == 1 && \"selected\"\n    }\" id=\"label_${label}\">${label}</h2>`\n  );\n\n  const $tileContainer = $(\n    `<div class=\"tile_container container_${label} ${\n      state == 1 ? \"opened\" : \"closed\"\n    }\">`\n  );\n\n  $tileContainer.addClass(\"on-tabs-tiles\");\n  $tileContainer.append(!tiles ? \"No tiles\" : tiles.map(getTile));\n\n  $tileContainer.on(\"click\", function (event) {\n    let $element;\n    if ($(event.target).hasClass(\"cell\")) {\n      $element = $(event.target);\n    } else {\n      $element = $(event.target).parents(\".cell\").first();\n    }\n    let idx = $element.attr(\"data-idx\");\n    const tile = tiles[idx];\n    if (tile && options.isActive(tile) && !options.isNewTabLink(tile)) {\n      options.onTileClick(event, tile, $element);\n    }\n  });\n\n  $label.on(\"click\", function (event) {\n    $(\".opened\").toggleClass(\"opened closed\");\n\n    $tileContainer.toggleClass(\"closed opened\");\n    $label.toggleClass(\"selected\");\n\n    $mainContainer.siblings().children(\".selected\").toggleClass(\"selected\");\n\n    window.localStorage.setItem(\n      \"tocOpenTab\",\n      $tileContainer.hasClass(\"opened\") ? tabID : undefined\n    );\n  });\n\n  $mainContainer.append($label);\n  $contentDiv.append($tileContainer);\n\n  return $mainContainer;\n\n  function getTile(tile, idx) {\n    if (tile.empty) {\n      return '<div style=\"width: 100%\"></div>';\n    }\n\n    if (!options.shouldRender(tile)) return \"\";\n    const ribbon = options.ribbon(tile);\n    const active = options.isActive(tile);\n    const header = options.header(tile);\n    const footer = options.footer(tile);\n    const title = options.title(tile);\n    const icon = options.icon(tile);\n    const href = options.href(tile);\n    const newTabLink = options.isNewTabLink(tile);\n    const size = getSize(title);\n\n    let iconType = /(fa|ci-icon)-/.exec(icon);\n    if (iconType) iconType = iconType[1];\n    const $el = $(`\n                <div class=\"cell ${active ? \"active\" : \"inactive\"}\">\n                    <div class='content'>\n                     <h5 class='header'>${header || \"\"}</h5>\n                        ${\n                          icon\n                            ? `<div class=\"${iconType} ${icon} icon main huge\"></div>`\n                            : `<div class=\"title main ${size}\">${\n                                title || \"\"\n                              }</div>`\n                        }\n                        <div class=\"footer\">${footer || \"\"}</div>\n                        ${\n                          ribbon\n                            ? `<div class=\"ribbon-wrapper\"><div class=\"ribbon beta\">${ribbon}</div></div>`\n                            : \"\"\n                        }\n                    </div>\n                </div>\n        `);\n\n    $el.css({\n      color: options.color(tile),\n      backgroundColor: options.backgroundColor(tile),\n      cursor: active && options.isLink(tile) ? \"pointer\" : \"inherit\",\n    });\n\n    $el.attr({\n      \"data-idx\": idx,\n    });\n    if (newTabLink && active && href) {\n      return $el\n        .wrap(\n          `<a href=\"${href}\" target=\"_blank\" style=\"text-decoration: none; color: initial;\" />`\n        )\n        .parent();\n    }\n    return $el;\n  }\n\n  function getSize(text) {\n    if (text === undefined) return \"huge\";\n    const asText = String(text);\n    if (asText.length <= 3) {\n      return \"huge\";\n    } else if (asText.length <= 6) {\n      return \"large\";\n    } else {\n      return \"medium\";\n    }\n  }\n}\n\n\n\nwindow.TilesManager=TilesManager;\nwindow.API=API;\nwindow.checkRights=checkRights;\nif (API.getData('twigTemplate')) {\n    API.getData('twigTemplate').triggerChange();\n}"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "vh/util/checkRights",
                "alias": "checkRights"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Inject in window some general functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Inject in window some general functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 147,
            "top": 0
          },
          "size": {
            "width": 63,
            "height": 84
          },
          "zIndex": 0,
          "display": true,
          "title": "Inject in window some general functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Inject in window some general functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Inject in window some general functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Inject in window some general functions",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 10,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Inject in window some general functions"
    },
    {
      "url": "modules/types/edition/slick_grid/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "slickCheck": [
                [
                  "enableCellNavigation",
                  "rowNumbering",
                  "forceFitColumns",
                  "highlightScroll",
                  "forgetLastActive",
                  "editable",
                  "enableAddRow"
                ]
              ],
              "copyPaste": [
                []
              ],
              "copyPasteOptions": [
                [
                  "newRows"
                ]
              ],
              "autoColumns": [
                [
                  "remove",
                  "reorder"
                ]
              ],
              "toolbar": [
                []
              ],
              "colorjpath": [
                []
              ],
              "slick.defaultColumnWidth": [
                null
              ],
              "slick.rowHeight": [
                null
              ],
              "slick.headerRowHeight": [
                30
              ],
              "slick.selectionModel": [
                "row"
              ],
              "idProperty": [
                ""
              ],
              "filterType": [
                "pref"
              ],
              "filterRow": [
                "// Documentation: https://github.com/NPellet/visualizer/blob/46b40ca86345f8fa313563bf9c6ecb80ba323101/src/modules/types/edition/slick_grid/view.js#L1695-L1735"
              ],
              "customJpaths": [
                ""
              ]
            }
          ],
          "cols": [
            [
              {
                "name": "Category",
                "jpath": [
                  "label"
                ],
                "editor": "string",
                "forceType": "",
                "formatter": "typerenderer",
                "copyFormatter": "default",
                "visibility": "both",
                "rendererOptions": "",
                "editorOptions": "",
                "hideColumn": []
              }
            ]
          ],
          "actionCols": [
            [
              {
                "backgroundColor": [
                  255,
                  255,
                  255,
                  0
                ],
                "color": [
                  0,
                  0,
                  0,
                  1
                ],
                "position": "end",
                "clickMode": "text"
              }
            ]
          ],
          "groupings": [
            [
              {
                "getter": []
              }
            ]
          ],
          "actionOutButtons": [
            [
              {}
            ]
          ],
          "data": [
            {
              "saveInView": [
                []
              ],
              "varname": [
                ""
              ],
              "data": [
                "[]"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 24,
            "height": 53
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "TilesCategory"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 169,
            "top": 0
          },
          "size": {
            "width": 19,
            "height": 57
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 11,
      "vars_in": [
        {
          "rel": "list",
          "name": "categories"
        }
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "event": "onRowActive",
          "rel": "row",
          "jpath": [
            "tiles"
          ],
          "name": "categoryTiles"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              []
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": ""
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "window.categories=JSON.parse(JSON.stringify(API.getData('categories')));\nAPI.getData('twigTemplate').triggerChange();\n\n\nif (! this.button) return;\n\nconst cdb = new CDB();\nconst categories = JSON.stringify(API.getData('categories'));\n\nlet attachements = await cdb.upload({\n    data: categories,\n    name: 'categories.json',\n    contentType: 'application/json'\n});\n\nUI.showNotification('saved', 'info');\n\nconsole.log('attachements', attachements);"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "src/util/couchdbAttachments",
                "alias": "CDB"
              },
              {
                "lib": "src/util/ui",
                "alias": "UI"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "save",
                "label": "Save preferences",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Save categories and links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Save categories and links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Save categories and links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 37,
            "top": 55
          },
          "size": {
            "width": 28,
            "height": 6
          },
          "zIndex": 0,
          "display": true,
          "title": "Save categories and links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "TilesCategory"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Save categories and links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Save categories and links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 12,
      "vars_in": [
        {
          "rel": "inputValue",
          "name": "categories"
        }
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Save categories and links"
    },
    {
      "url": "modules/types/edition/object_editor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "editable": [
                "text"
              ],
              "expanded": [
                [
                  "expand"
                ]
              ],
              "storeObject": [
                []
              ],
              "displayValue": [
                []
              ],
              "searchBox": [
                [
                  "search"
                ]
              ],
              "sendButton": [
                [
                  "send"
                ]
              ],
              "output": [
                "new"
              ],
              "storedObject": [
                "{}"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 85,
            "top": 54
          },
          "size": {
            "width": 44,
            "height": 30
          },
          "zIndex": 0,
          "display": true,
          "title": "INPUT: parse a JSON containing preferences",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "TilesCategory"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 13,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "event": "onObjectSend",
          "rel": "output",
          "jpath": [],
          "name": "categories"
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "INPUT: parse a JSON containing preferences"
    },
    {
      "url": "modules/types/edition/object_editor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "editable": [
                "text"
              ],
              "expanded": [
                [
                  "expand"
                ]
              ],
              "storeObject": [
                []
              ],
              "displayValue": [
                []
              ],
              "searchBox": [
                [
                  "search"
                ]
              ],
              "sendButton": [
                []
              ],
              "output": [
                "new"
              ],
              "storedObject": [
                "{}"
              ]
            }
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 130,
            "top": 54
          },
          "size": {
            "width": 49,
            "height": 30
          },
          "zIndex": 0,
          "display": true,
          "title": "OUTPUT: copy the JSON containing the current preferences",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "TilesCategory"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 14,
      "vars_in": [
        {
          "rel": "value",
          "name": "categories"
        }
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "OUTPUT: copy the JSON containing the current preferences"
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "const printerConfig = API.cache('printerConfig');\nconst couchDB = API.cache('couchDB');\n\nconsole.log('ACTION',this.action);\n\nswitch (this.action.name) {\n    case 'handleTileClick': {\n        handleTileClick(this.action.value);\n        break;\n    }\n    case 'rowDoubleClicked': {\n        // we search for the edit sample action\n        const tile = API.cache('tilesManager').findTile('15c9a2dcd55c963fdedf2c18a1471b03');\n        handleTileClick({\n            tile,\n            sample: {uuid: this.action.value.id, reference: this.action.value.key.slice(1).join(' ')}\n        });\n        break;\n    }\n    default: {\n        console.warn('unhandled action', this.action);\n    }\n}\n\n\nfunction handleTileClick(value={}) {\n    const {\n        tile,\n        sample={}\n    } = value;\n    \n    const uuid = sample.uuid || '';\n    const reference = sample.reference;\n\n    const referer=document.location.href.replace(/(\\/\\/.*?\\/).*/,'$1').replace('blob:','');\n    let viewURL=tile.viewURL+'?referer='+encodeURIComponent(referer);\n    if (tile.rev) viewURL+='&rev='+tile.rev;\n    switch (String(tile.kind)) {\n        case 'sample':\n            if (! uuid || ! reference) return;\n            IframeBridge.postMessage('tab.open', {\n                id: `${tile.id} ${reference}`,\n                url: viewURL,\n                data: {\n                    printer: printerConfig,\n                    couchDB,\n                    uuid: String(uuid),\n                    data: tile.data ? JSON.parse(String(tile.data)) : undefined,\n                    reference\n                }\n            });\n            break;\n        case 'optionalSample':\n            IframeBridge.postMessage('tab.open', {\n                id: tile.id,\n                url: viewURL,\n                data: {\n                    printer: printerConfig,\n                    couchDB,\n                    uuid: String(uuid),\n                    data: tile.data ? JSON.parse(tile.data) : undefined,\n                }\n            });\n            break;\n        case 'rawIframeSample':\n            IframeBridge.postMessage('tab.open', {\n                id: `${tile.id} ${reference}`,\n                url: tile.viewURL,\n                rawIframe: true,\n                data: {\n                    printer: printerConfig,\n                    couchDB,\n                    uuid: String(uuid),\n                    data: tile.data ? JSON.parse(tile.data) : undefined,\n                }\n            });\n            break;\n        case 'rawIframe':\n            IframeBridge.postMessage('tab.open', {\n                id: tile.id,\n                url: tile.viewURL,\n                rawIframe: true,\n                data: {\n                    printer: printerConfig,\n                    couchDB,\n                    uuid: String(uuid),\n                    data: tile.data ? JSON.parse(tile.data) : undefined,\n                }\n            });\n            break;\n        case 'newTab':\n            console.log(tile);\n            break;\n        default:\n            console.warn(`unknown tile kind: ${tile.kind}`);\n            break;\n    }\n}"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "src/util/ui",
                "alias": "UI"
              },
              {
                "lib": "moment",
                "alias": "moment"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 55,
            "top": 0
          },
          "size": {
            "width": 71,
            "height": 48
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 55,
            "top": 0
          },
          "size": {
            "width": 71,
            "height": 48
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 46,
            "height": 82
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 76,
            "height": 68
          },
          "zIndex": 0,
          "display": true,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 2,
            "top": 2
          },
          "size": {
            "width": 46,
            "height": 82
          },
          "zIndex": 0,
          "display": false,
          "title": "Code to manage the links",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        }
      },
      "id": 15,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "handleTileClick"
        },
        {
          "rel": "execute",
          "name": "rowDoubleClicked"
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Code to manage the links"
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                ""
              ]
            }
          ],
          "libs": [
            [
              {}
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 43,
            "top": 12
          },
          "size": {
            "width": 0,
            "height": 0
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "TilesCategory"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "TilesActions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Links"
        }
      },
      "id": 16,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": ""
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                [
                  "yes"
                ]
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "if(this.event === 'load') {\n    let printer = await printerLib(API.cache('printerConfig').couchDB);\n    await printerHelper.setup(printer, ['sample','location']);\n    API.doAction('rerenderToc', {});\n    console.log('rerenderToc')\n    return;\n}\n\n\nif (this.variable) {\n    API.cache('nbSamples', API.getData('sampleTocFiltered').length);\n    API.getData('twigTemplate').triggerChange();\n    return;\n}\n\nconsole.log('ACTION',this.action);\n\nconst roc=API.cache('roc');\nconst samples = API.getData('sampleToc');\n\nswitch (this.action.name) {\n    case 'ToggleShowHiddenEntries':\n        const preferences = API.cache('preferences')\n        preferences.showHiddenEntries = ! preferences.showHiddenEntries;\n        API.doAction('refresh');\n        break;\n    case 'ToggleHiddenEntry':\n        const roc=API.cache('roc');\n        const id = this.action.value.id;\n        if (!id) return;\n        const entry = await roc.get(id);\n        entry.$content.hidden = ! entry.$content.hidden;\n        await roc.update(entry);\n        API.doAction('refresh')\n        break;\n    case 'copyToc':\n        copyToc();\n        break;\n    case 'refresh':\n        API.cache('sampleToc').refresh();\n        break;\n    case 'PrintLabel':\n        const doc = await DataObject.check(this.action.value.document).get(true);\n        printerHelper.askPrintEntry(doc, 'sample');\n        break;\n    case 'createSample':\n        createSample();\n        break;\n        case 'SortCode':\n        samples.sort((a,b) => {\n            if (String(a.value.reference) < String(b.value.reference)) return -1;\n            return 1;\n        });\n        samples.triggerChange();\n        break;\n    case 'SortCodeReverse':\n        samples.sort((a,b) => {\n            if (String(a.value.reference) < String(b.value.reference)) return 1;\n            return -1;\n        });\n        samples.triggerChange();\n        break;\n    case 'SortDate':\n        console.log('Sort')\n        samples.sort((a,b) => {\n            if (String(a.value.modified) < String(b.value.modified)) return -1;\n            return 1;\n        });\n        samples.triggerChange();\n        break;\n    case 'SortDateReverse':\n        console.log('referse')\n        samples.sort((a,b) => {\n             if (String(a.value.modified) < String(b.value.modified)) return 1;\n            return -1;\n        });\n        samples.triggerChange();\n        break;\n}\n\n\nfunction createSample(sample) {\n    const entrysample = {$content: {}}\n    UI.form(`\n        <div>\n        <form>\n            <table>\n            <tr>\n            <th align=right>Reference<br><span style='font-size: smaller'>Reaction code</span></th>\n            <td>\n                <input type=\"text\" name=\"code\" pattern=\"[A-Za-z0-9 .,-]{3,}\"/><br>\n                <i>\n                    At least 3 characters and only letters, numbers, space, point, comma and dash\n                </i>\n            </td>\n            </tr>\n            <tr>\n            <th align=right>Batch<br><span style='font-size: smaller'>Fraction</span></th>\n            <td>\n                <input type=\"text\" name=\"batch\" pattern=\"[A-Za-z0-9 .,-]*\"/><br>\n                <i>\n                    Only letters, numbers, space, point, comma and dash\n                </i>\n            </td>\n            </tr>\n            <!--\n            <tr>\n            <th align=right>Sample<br><span style='font-size: smaller'>(empty most of the time)</span></th>\n            <td><input type=\"text\" name=\"sample\" pattern=\"[A-Za-z0-9 .,-]*\"/></td>\n            </tr>\n            -->\n            </table>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>\n        </div>\n    `,{}).then(async function(result){\n        if(!result || !result.code || result.batch == null) return;\n        entrysample.$id = [result.code, result.batch];\n        const reference = result.code + (result.batch ? '_'+result.batch : '');\n        // this will give trouble is we add samples !\n        if (result.sample) entrysample.$id.push(result.sample);\n        const userInfo = API.cache('userInfo');\n        \n        if (userInfo && userInfo.allGroups) {\n            entrysample.$owners=userInfo.allGroups;\n        }\n\n        const sample = await roc.create(entrysample)\n        \n        let defaultTile;\n        // need to find the tile\n        const categories=API.getData('categories');\n        categories.forEach(category => {\n            category.tiles.forEach(tile => {\n                if (String(tile.viewURL) === '15c9a2dcd55c963fdedf2c18a1471b03') {\n                    defaultTile=tile;\n                }\n            })\n        })\n        \n        \n        console.log(defaultTile, sample)\n        \n        API.doAction('handleTileClick', {\n            tile: defaultTile,\n            sample: {\n                uuid: sample._id,\n                reference: sample.$id.join('_')\n            }\n        })\n\n        // we do like if we would have click on the line we just added\n        API.doAction('clickRow', {id: sample._id});\n    });\n}\n\n\n\nfunction copyToc() {\n    let filteredSamples = API.getData('sampleTocFiltered');\n    let result=[];\n    result.push([\n        'Sample',\n        'Date',\n        'Nb NMR 1D',\n        'Nb NMR 2D',\n        'Nb NMR',\n        'Nb Chromatogram',\n        'Nb DSC',\n        'Nb IR',\n        'Nb Mass',\n        'Nb TGA'\n    ].join('\\t'))\n    for (let sample of filteredSamples) {\n        result.push(\n            [\n                sample.key[1],\n                moment(new Date(sample.value.modificationDate)).format('YYYY/MM/DD HH:mm'),\n                sample.value.nb1d,\n                sample.value.nb2d,\n                sample.value.nbNmr,\n                sample.value.nbChromatogram,\n                sample.value.nbDSC,\n                sample.value.nbIR,\n                sample.value.nbMass,\n                sample.value.nbTGA\n            ].join('\\t')\n        );\n    }\n    UI.dialog(\n        '<textarea style=\"width: 100%; height: 100%\">'+\n        result.join('\\r\\n')+\n        '</textarea>',\n        {width: 800, height:600})\n}\n\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "src/util/ui",
                "alias": "UI"
              },
              {
                "lib": "moment",
                "alias": "moment"
              },
              {
                "lib": "vh/eln/stock/printer/helper",
                "alias": "printerHelper"
              },
              {
                "lib": "vh/eln/stock/printer/printer",
                "alias": "printerLib"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Actions dealing with sampleToc",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 57,
            "top": 0
          },
          "size": {
            "width": 83,
            "height": 66
          },
          "zIndex": 0,
          "display": true,
          "title": "Actions dealing with sampleToc",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Actions dealing with sampleToc",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Layout"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Actions dealing with sampleToc",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Edition"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Actions dealing with sampleToc",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Actions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "Actions dealing with sampleToc",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Management Actions"
        }
      },
      "id": 17,
      "vars_in": [
        {
          "rel": "inputValue",
          "name": "sampleTocFiltered"
        }
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "copyToc"
        },
        {
          "rel": "execute",
          "name": "refresh"
        },
        {
          "rel": "execute",
          "name": "ToggleShowHiddenEntries"
        },
        {
          "rel": "execute",
          "name": "ToggleHiddenEntry"
        },
        {
          "rel": "execute",
          "name": "createSample"
        },
        {
          "rel": "execute",
          "name": "SortCode"
        },
        {
          "rel": "execute",
          "name": "SortCodeReverse"
        },
        {
          "rel": "execute",
          "name": "SortDate"
        },
        {
          "rel": "execute",
          "name": "SortDateReverse"
        },
        {
          "rel": "execute",
          "name": "PrintLabel"
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Actions dealing with sampleToc"
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "const { Matrix, PCA } = ML;\nconst chrom = API.cache('chrom');\nconst { xFindClosestIndex } = spectraProcessing;\nconst peaksChroma = API.getData('chromPeaks');\nconst deconvOptions = API.getData('deconvOptions');\n\n// console.log(peaksChroma);\n// console.log(chrom.deconvolution(peaksChroma));\n// return\nconst action = this.action;\n\nlet actionName;\nswitch (this.variable) {\n    case 'shapeClicked':\n        console.log('entra shape')\n        actionName = 'plotComponent';\n        break;\n    default:\n        actionName = action.name;\n}\n\n\nswitch(actionName) {\n    case 'chromAnnotationClicked':\n        let shape = this.action.value;\n        if (!shape.spectrum) break;\n        API.createData('components', shape.spectrum);\n        break\n    case 'plotDeconvolution':\n        let range = API.getData('dataByRange');\n        plotDeconvolution([range]);\n        break;\n    case 'plotDeconvolutionAll':\n        plotDeconvolution(peaksChroma);\n        break\n    case 'nNMFAll': \n        nNMF(peaksChroma, deconvOptions);\n        API.doAction('plotDeconvolutionAll')\n        break;\n    case 'nNMFSingle':\n        console.log('action', action)\n        nNMF([action.value], deconvOptions);\n        API.doAction('plotDeconvolutionAll')\n        break;\n}\n\nfunction nNMF(peaksChroma, options) {\n    let result = chrom.deconvolution(peaksChroma, options);\n    console.log('result NMF', result)\n    for (let p = 0; p < result.length; p++ ) {\n        let data = peaksChroma[p];\n        putNotEnumerable(data, 'S', result[p].S);\n        putNotEnumerable(data, 'A', result[p].A);\n        putNotEnumerable(data, 'times', result[p].times);\n        putNotEnumerable(data, 'xAxis', result[p].xAxis);\n        putNotEnumerable(data, 'rank', result[p].rank);\n        if (data.triggerChange) {\n            data.triggerChange();\n        }\n    }\n}\n\nfunction putNotEnumerable(obj, name, value) {\n    Object.defineProperty(obj, name, {\n        value: value,\n        enumerable: false,\n        configurable: true,\n        writable: true\n    });\n}\n\nfunction plotDeconvolution(ranges) {\n    let template = API.getData('templatePoligonAnotation');\n    let annotations = [];\n    \n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        let chartC = {data: []};\n        range.rank = Number(range.rank);\n        let colors = chroma.scale(['blue', 'red']).domain([0,range.rank - 1], range.rank, 'quantiles');\n        if (range.A && range.S) {\n            if (range.rank !== range.S.rows) {\n                console.warn('rank and S rows does not match');\n                return;\n            }\n            \n            for (let i = 0; i < range.rank; i++) {\n                // chartC.data.push(JSON.parse(JSON.stringify(template)));\n                // let index = chartC.data.length - 1;\n                // chartC.data[index].x = range.xAxis;\n                // chartC.data[index].y = range.S.getRow(i);\n                // chartC.data[index].styles.unselected.lineColor = colors(i).hex();\n                let chartC = {data: []};\n                chartC.data.push(JSON.parse(JSON.stringify(template)));\n                let index = chartC.data.length - 1;\n                chartC.data[index].x = range.xAxis;\n                chartC.data[index].y = range.S.getRow(i);\n                chartC.data[index].styles.unselected.lineColor = colors(i).hex();\n                let position = [];\n                for (let j = 0; j < range.times.length; j++) {\n                    position.push({x: range.times[j], y: range.A.get(j,i)})\n                }\n                position.push({x:range.times[range.times.length - 1], y: 0});\n                position.push({x:range.times[0], y: 0});\n                annotations.push({\n                    type: 'polygon',\n                    layer: 0,\n                    spectrum: JSON.parse(JSON.stringify(chartC)),\n                    properties: {\n                       layer: [0],\n                       fillColor: colors(i).hex(),\n                       fillOpacity: 0.15,\n                       strokeWidth: 1,\n                       strokeColor: colors(i).hex(),\n                       position,\n                    },\n                });\n            }\n        }\n    }\n    console.log(annotations)\n    API.createData('annotationsDeconv',annotations);\n    // API.createData('components', chartC);\n}\n\nfunction splitRanges(ranges) {\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        let S = range.S;\n    }\n}\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "https://www.lactame.com/lib/ml-ngmca/0.0.1/ml-ngmca.min.js",
                "alias": "NMF"
              },
              {
                "lib": "ML",
                "alias": "ML"
              },
              {
                "lib": "https://www.lactame.com/lib/ml-spectra-processing/4.1.1/ml-spectra-processing.min.js",
                "alias": "spectraProcessing"
              },
              {
                "lib": "chroma",
                "alias": "chroma"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 50
          },
          "size": {
            "width": 37,
            "height": 37
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Layout"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Edition"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Actions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Management Actions"
        }
      },
      "id": 18,
      "vars_in": [
        {
          "rel": "inputValue",
          "name": "shapeClicked"
        }
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "nNMFAll"
        },
        {
          "rel": "execute",
          "name": "nNMFSingle"
        },
        {
          "rel": "execute",
          "name": "addSingleMatrix"
        },
        {
          "rel": "execute",
          "name": "addMatrixAll"
        },
        {
          "rel": "execute",
          "name": "plotDeconvolutionAll"
        },
        {
          "rel": "execute",
          "name": "chromAnnotationClicked"
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Deconvolution Admin Code",
      "zindex": 3
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "const { Matrix, PCA } = ML;\nconst chrom = API.cache('chrom');\nconst { xFindClosestIndex } = spectraProcessing;\nconst peaksChroma = API.getData('chromPeaks');\nconst deconvOptions = API.getData('deconvOptions');\n\n// console.log(peaksChroma);\n// console.log(chrom.deconvolution(peaksChroma));\n// return\nconst action = this.action;\n\nlet actionName;\nswitch (this.variable) {\n    case 'shapeClicked':\n        console.log('entra shape')\n        actionName = 'plotComponent';\n        break;\n    default:\n        actionName = action.name;\n}\n\n\nswitch(actionName) {\n    case 'chromAnnotationClicked':\n        let shape = this.action.value;\n        if (!shape.spectrum) break;\n        API.createData('components', shape.spectrum);\n        break\n    case 'plotDeconvolution':\n        let range = API.getData('dataByRange');\n        plotDeconvolution([range]);\n        break;\n    case 'plotDeconvolutionAll':\n        plotDeconvolution(peaksChroma);\n        break\n    case 'nNMFAll': \n        nNMF(peaksChroma, deconvOptions);\n        API.doAction('plotDeconvolutionAll')\n        break;\n    case 'nNMFSingle':\n        console.log('action', action)\n        nNMF([action.value], deconvOptions);\n        API.doAction('plotDeconvolutionAll')\n        break;\n}\n\nfunction nNMF(peaksChroma, options) {\n    let result = chrom.deconvolution(peaksChroma, options);\n    console.log('result NMF', result)\n    for (let p = 0; p < result.length; p++ ) {\n        let data = peaksChroma[p];\n        putNotEnumerable(data, 'S', result[p].S);\n        putNotEnumerable(data, 'A', result[p].A);\n        putNotEnumerable(data, 'times', result[p].times);\n        putNotEnumerable(data, 'xAxis', result[p].xAxis);\n        putNotEnumerable(data, 'rank', result[p].rank);\n        if (data.triggerChange) {\n            data.triggerChange();\n        }\n    }\n}\n\nfunction putNotEnumerable(obj, name, value) {\n    Object.defineProperty(obj, name, {\n        value: value,\n        enumerable: false,\n        configurable: true,\n        writable: true\n    });\n}\n\nfunction plotDeconvolution(ranges) {\n    let template = API.getData('templatePoligonAnotation');\n    let annotations = [];\n    \n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        let chartC = {data: []};\n        range.rank = Number(range.rank);\n        let colors = chroma.scale(['blue', 'red']).domain([0,range.rank - 1], range.rank, 'quantiles');\n        if (range.A && range.S) {\n            if (range.rank !== range.S.rows) {\n                console.warn('rank and S rows does not match');\n                return;\n            }\n            \n            for (let i = 0; i < range.rank; i++) {\n                // chartC.data.push(JSON.parse(JSON.stringify(template)));\n                // let index = chartC.data.length - 1;\n                // chartC.data[index].x = range.xAxis;\n                // chartC.data[index].y = range.S.getRow(i);\n                // chartC.data[index].styles.unselected.lineColor = colors(i).hex();\n                let chartC = {data: []};\n                chartC.data.push(JSON.parse(JSON.stringify(template)));\n                let index = chartC.data.length - 1;\n                chartC.data[index].x = range.xAxis;\n                chartC.data[index].y = range.S.getRow(i);\n                chartC.data[index].styles.unselected.lineColor = colors(i).hex();\n                let position = [];\n                for (let j = 0; j < range.times.length; j++) {\n                    position.push({x: range.times[j], y: range.A.get(j,i)})\n                }\n                position.push({x:range.times[range.times.length - 1], y: 0});\n                position.push({x:range.times[0], y: 0});\n                annotations.push({\n                    type: 'polygon',\n                    layer: 0,\n                    spectrum: JSON.parse(JSON.stringify(chartC)),\n                    properties: {\n                       layer: [0],\n                       fillColor: colors(i).hex(),\n                       fillOpacity: 0.15,\n                       strokeWidth: 1,\n                       strokeColor: colors(i).hex(),\n                       position,\n                    },\n                });\n            }\n        }\n    }\n    console.log(annotations)\n    API.createData('annotationsDeconv',annotations);\n    // API.createData('components', chartC);\n}\n\nfunction splitRanges(ranges) {\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        let S = range.S;\n    }\n}\n"
              ]
            }
          ],
          "libs": [
            [
              {
                "lib": "https://www.lactame.com/lib/ml-ngmca/0.0.1/ml-ngmca.min.js",
                "alias": "NMF"
              },
              {
                "lib": "ML",
                "alias": "ML"
              },
              {
                "lib": "https://www.lactame.com/lib/ml-spectra-processing/4.1.1/ml-spectra-processing.min.js",
                "alias": "spectraProcessing"
              },
              {
                "lib": "chroma",
                "alias": "chroma"
              }
            ]
          ],
          "buttons": [
            [
              {
                "name": "button1",
                "label": "Execute",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 0,
            "top": 50
          },
          "size": {
            "width": 37,
            "height": 37
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Layout"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Edition"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Actions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Management Actions"
        }
      },
      "id": 19,
      "vars_in": [
        {
          "rel": "inputValue",
          "name": "shapeClicked"
        }
      ],
      "actions_in": [
        {
          "rel": "execute",
          "name": "nNMFAll"
        },
        {
          "rel": "execute",
          "name": "nNMFSingle"
        },
        {
          "rel": "execute",
          "name": "addSingleMatrix"
        },
        {
          "rel": "execute",
          "name": "addMatrixAll"
        },
        {
          "rel": "execute",
          "name": "plotDeconvolutionAll"
        },
        {
          "rel": "execute",
          "name": "chromAnnotationClicked"
        }
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": "Deconvolution Admin Code",
      "zindex": 3
    },
    {
      "url": "modules/types/client_interaction/code_executor/",
      "configuration": {
        "sections": {},
        "groups": {
          "group": [
            {
              "display": [
                [
                  "editor",
                  "buttons"
                ]
              ],
              "execOnLoad": [
                []
              ],
              "asyncAwait": [
                [
                  "top"
                ]
              ],
              "script": [
                "var button=getButton();\n\nswitch (button) {\n    case 'add':\n        API.doAction('createSample');\n        break;\n}"
              ]
            }
          ],
          "libs": [
            [
              {}
            ]
          ],
          "buttons": [
            [
              {
                "name": "add",
                "label": "Add sample",
                "hide": [],
                "disable": []
              }
            ]
          ]
        }
      },
      "layers": {
        "Default layer": {
          "position": {
            "left": 42,
            "top": 1
          },
          "size": {
            "width": 12,
            "height": 5
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": false,
          "created": true,
          "name": "Default layer"
        },
        "SampleTocActions": {
          "position": {
            "left": 142,
            "top": 0
          },
          "size": {
            "width": 17,
            "height": 7
          },
          "zIndex": 0,
          "display": true,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "SampleTocActions"
        },
        "Tiles Layout": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Layout"
        },
        "Tiles Edition": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Edition"
        },
        "Tiles Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Actions"
        },
        "Tiles Management Actions": {
          "position": {
            "left": 0,
            "top": 0
          },
          "size": {
            "width": 20,
            "height": 20
          },
          "zIndex": 0,
          "display": false,
          "title": "",
          "bgColor": [
            255,
            255,
            255,
            0
          ],
          "wrapper": true,
          "created": true,
          "name": "Tiles Management Actions"
        }
      },
      "id": 20,
      "vars_in": [
        {}
      ],
      "actions_in": [
        {}
      ],
      "vars_out": [
        {
          "jpath": []
        }
      ],
      "actions_out": [
        {
          "jpath": []
        }
      ],
      "toolbar": {
        "custom": [
          [
            {
              "title": "",
              "icon": "",
              "action": "",
              "position": "begin",
              "color": [
                100,
                100,
                100,
                1
              ]
            }
          ]
        ],
        "common": [
          {
            "toolbar": [
              [
                "Open Preferences"
              ]
            ]
          }
        ]
      },
      "css": [
        {
          "fontSize": [
            ""
          ],
          "fontFamily": [
            ""
          ]
        }
      ],
      "title": ""
    }
  ],
  "variables": [
    {
      "jpath": [
        ""
      ]
    }
  ],
  "aliases": [
    {
      "path": "../../github/cheminfo-js/visualizer-helper/a0dad58bc0be54381edfc84990160f183df6d85d/",
      "alias": "vh"
    },
    {
      "path": "http://localhost:9898/cheminfo-js/visualizer-helper/",
      "alias": "vhxx"
    }
  ],
  "configuration": {
    "title": "No title"
  },
  "actionscripts": [
    {
      "sections": {},
      "groups": {
        "action": [
          {
            "name": [
              null
            ],
            "script": [
              null
            ]
          }
        ]
      }
    }
  ],
  "init_script": [
    {
      "sections": {},
      "groups": {
        "general": [
          {
            "script": [
              "const [\n    Roc,\n    Toc,\n    loadTwig,\n    CDB,\n] = await API.require([\n    'vh/rest-on-couch/Roc',\n    'vh/eln/Toc',\n    'vh/eln/templates/loadTwig',\n    'src/util/couchdbAttachments',\n]);\n\n// load current tiles\nconst cdb = new CDB();\n\nwindow.categories = [];\nAPI.createData('categories', window.categories).then( async (categories) => {\n    try {\n        const newCategories = await cdb.get('categories.json');\n        for (let category of newCategories) {\n            categories.push(category);\n        }\n        categories.triggerChange();\n        console.log('categories created',categories);\n    } catch (e) {\n        console.warn('Error loading categories', e);\n    }\n});\n\n\n\n\nconst baseUrl = document.location.href.replace(/(\\/\\/.*?\\/).*/,'$1').replace('blob:', ''); \nlet rocUrl = `${baseUrl}roc`;\nif (document.location.href.indexOf('cheminfo.org')!==-1) {\n    rocUrl = 'https://mydb.cheminfo.org/';\n}\n\nconst database = 'eln';\nconst couchDB = {\n    url: rocUrl,\n    database: database,\n    kind: 'sample'\n}\nAPI.cache('couchDB', couchDB);\n\nconst roc = new Roc(couchDB);\nAPI.cache('roc', roc);\n\n/* PRINTER SETUO */\nlet printerRocUrl = rocUrl;\nlet printerProxy = `${baseUrl}printer-proxy`;\nvar printerConfig = {\n    couchDB: {\n        url: printerRocUrl,\n        database: 'printers',\n        proxy: printerProxy,\n    },\n    proxy: printerProxy\n};\nAPI.cache('printerConfig', printerConfig);\n\nlet lastReload = Date.now();\n\nAPI.cache('userInfo', await roc.getUserInfo());\n\nif((typeof IframeBridge)!=='undefined'){\n    IframeBridge.onMessage(function(data) {\n        switch (data.type) {\n            case 'tab.message':\n                switch (data.message.action) {\n                    case 'selectEntry':\n                        console.log('Select entry: ',data.message.uuid);\n                        return selectEntry(data.message.uuid);\n                    default:\n                        console.log('got an unknown message', data.message);\n                        return;\n                }\n                break;\n            case 'tab.focus':\n                if ((Date.now() - lastReload) > 30000) {\n                    API.doAction('refresh');\n                }\n                break;\n        }\n    });\n    IframeBridge.ready();\n}\n\nfunction selectEntry(uuid) {\n    if (!uuid) return;\n    const samples = API.getData('sampleTocFiltered');\n    if (samples) {\n        const index = samples.findIndex(sample => String(sample.id) === uuid);\n        if (index !== -1) {\n            API.doAction('clickRow', index);\n        }\n    }\n}\n\nconst preferences={\n    showHiddenEntries: false\n}\nAPI.cache('preferences', preferences)\n\nconst sampleToc = new Toc(roc, {\n    filter: (entry) => {\n        return entry.value.hidden === preferences.showHiddenEntries;\n    }\n});\nsampleToc.initializeGroupForm();\nAPI.cache('sampleToc', sampleToc);\n\n\nloadTwig(['org.cheminfo.sampleToc.chemical.default'], {variableName:'tocTemplate'});\n\n// Load custom font\nrequire(['src/util/util'], function(Util) {\n    Util.loadCss('../../lib/cheminfo-font/1.1.0/style.css');\n})\n\nAPI.require('vh/util/docs').then( Docs => {\n    Docs.addFullHelp({iconSize:'fa-6x'});\n});\n\n\n"
            ]
          }
        ]
      }
    }
  ],
  "custom_filters": [
    {
      "sections": {
        "modules": [
          {
            "sections": {},
            "groups": {
              "modules": [
                [
                  {}
                ]
              ]
            }
          }
        ],
        "filtersLib": [
          {
            "sections": {},
            "groups": {
              "filters": [
                [
                  {}
                ]
              ]
            }
          }
        ],
        "filters": [
          {
            "sections": {},
            "groups": {
              "filter": [
                {
                  "name": [
                    null
                  ],
                  "script": [
                    null
                  ]
                }
              ],
              "libs": [
                [
                  {}
                ]
              ]
            }
          }
        ]
      },
      "groups": {}
    }
  ],
  "actionfiles": [
    {
      "sections": {},
      "groups": {
        "action": [
          [
            {}
          ]
        ]
      }
    }
  ]
}